{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVotes",
          "name": "wDHN",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numMilestones",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ogTeamTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initLock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAdress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "lockedTeamAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lockedTeamTokens",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_wDHN",
      "outputs": [
        {
          "internalType": "contract IVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_walletToEmployee",
      "outputs": [
        {
          "internalType": "address",
          "name": "employee_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "received_tokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "lock_start",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "milestone",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "employment_status",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "og_employee",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_callerAddress",
          "type": "address"
        }
      ],
      "name": "get_date",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "new_employee_address",
          "type": "address"
        }
      ],
      "name": "new_employee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "employeeAddress",
          "type": "address"
        }
      ],
      "name": "remove_employee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "16": "contracts/IVotes.sol",
    "17": "contracts/LockContract.sol",
    "6": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "8": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        2796
      ],
      "Context": [
        2818
      ],
      "IERC20": [
        4060
      ],
      "IVotes": [
        722
      ],
      "LockContract": [
        1131
      ],
      "Math": [
        1884
      ],
      "SafeERC20": [
        2501
      ]
    },
    "id": 1132,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 724,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:17"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1132,
        "sourceUnit": 2502,
        "src": "132:65:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IVotes.sol",
        "file": "./IVotes.sol",
        "id": 726,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1132,
        "sourceUnit": 723,
        "src": "198:22:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 727,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1132,
        "sourceUnit": 2797,
        "src": "221:51:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1132,
        "sourceUnit": 2819,
        "src": "273:51:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 729,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1132,
        "sourceUnit": 1885,
        "src": "325:53:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 731,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2818,
              "src": "841:7:17"
            },
            "id": 732,
            "nodeType": "InheritanceSpecifier",
            "src": "841:7:17"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 730,
          "nodeType": "StructuredDocumentation",
          "src": "380:435:17",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 1131,
        "linearizedBaseContracts": [
          1131,
          2818
        ],
        "name": "LockContract",
        "nameLocation": "825:12:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "71a9f672",
            "id": 735,
            "mutability": "mutable",
            "name": "_wDHN",
            "nameLocation": "882:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "868:19:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVotes_$722",
              "typeString": "contract IVotes"
            },
            "typeName": {
              "id": 734,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 733,
                "name": "IVotes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 722,
                "src": "868:6:17"
              },
              "referencedDeclaration": 722,
              "src": "868:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVotes_$722",
                "typeString": "contract IVotes"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 741,
            "name": "ERC20Released",
            "nameLocation": "913:13:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "943:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "927:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "959:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "951:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:40:17"
            },
            "src": "907:60:17"
          },
          {
            "constant": false,
            "functionSelector": "58469782",
            "id": 746,
            "mutability": "mutable",
            "name": "_walletToEmployee",
            "nameLocation": "1024:17:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "988:53:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
              "typeString": "mapping(address => struct LockContract.Employee)"
            },
            "typeName": {
              "id": 745,
              "keyType": {
                "id": 742,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "988:28:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                "typeString": "mapping(address => struct LockContract.Employee)"
              },
              "valueType": {
                "id": 744,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 743,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 761,
                  "src": "1007:8:17"
                },
                "referencedDeclaration": 761,
                "src": "1007:8:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$761_storage_ptr",
                  "typeString": "struct LockContract.Employee"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Employee",
            "id": 761,
            "members": [
              {
                "constant": false,
                "id": 748,
                "mutability": "mutable",
                "name": "employee_address",
                "nameLocation": "1096:16:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1088:24:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 747,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1088:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 750,
                "mutability": "mutable",
                "name": "received_tokens",
                "nameLocation": "1158:15:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1150:23:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 749,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1150:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 752,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1237:15:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1229:23:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 751,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1229:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 754,
                "mutability": "mutable",
                "name": "lock_start",
                "nameLocation": "1310:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1303:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 753,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1303:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 756,
                "mutability": "mutable",
                "name": "milestone",
                "nameLocation": "1394:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1387:16:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 755,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1387:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 758,
                "mutability": "mutable",
                "name": "employment_status",
                "nameLocation": "1473:17:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1468:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 757,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1468:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 760,
                "mutability": "mutable",
                "name": "og_employee",
                "nameLocation": "1558:11:17",
                "nodeType": "VariableDeclaration",
                "scope": 761,
                "src": "1553:16:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 759,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1553:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nameLocation": "1069:8:17",
            "nodeType": "StructDefinition",
            "scope": 1131,
            "src": "1062:861:17",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 765,
            "mutability": "mutable",
            "name": "_employees",
            "nameLocation": "1956:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "1945:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Employee_$761_storage_$dyn_storage",
              "typeString": "struct LockContract.Employee[]"
            },
            "typeName": {
              "baseType": {
                "id": 763,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 762,
                  "name": "Employee",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 761,
                  "src": "1945:8:17"
                },
                "referencedDeclaration": 761,
                "src": "1945:8:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$761_storage_ptr",
                  "typeString": "struct LockContract.Employee"
                }
              },
              "id": 764,
              "nodeType": "ArrayTypeName",
              "src": "1945:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Employee_$761_storage_$dyn_storage_ptr",
                "typeString": "struct LockContract.Employee[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 767,
            "mutability": "mutable",
            "name": "_initLock",
            "nameLocation": "2018:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2009:18:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 766,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2009:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 769,
            "mutability": "mutable",
            "name": "_erc20Released",
            "nameLocation": "2073:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2065:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 768,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2065:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 771,
            "mutability": "mutable",
            "name": "_numMilestones",
            "nameLocation": "2135:14:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2127:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 770,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2127:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 773,
            "mutability": "mutable",
            "name": "_OGTeamTokens",
            "nameLocation": "2225:13:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2217:21:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 772,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2217:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 775,
            "mutability": "mutable",
            "name": "_numOGEmployees",
            "nameLocation": "2288:15:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2280:23:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 774,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2280:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 777,
            "mutability": "mutable",
            "name": "_leftover",
            "nameLocation": "2342:9:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2334:17:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 776,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2334:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 779,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "2400:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 1131,
            "src": "2392:14:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 778,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2392:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "2789:1416:17",
              "statements": [
                {
                  "expression": {
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 800,
                      "name": "_wDHN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "2800:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$722",
                        "typeString": "contract IVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 801,
                      "name": "wDHN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "2806:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$722",
                        "typeString": "contract IVotes"
                      }
                    },
                    "src": "2800:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$722",
                      "typeString": "contract IVotes"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:10:17"
                },
                {
                  "expression": {
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 804,
                      "name": "_numMilestones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "2852:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 805,
                      "name": "numMilestones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "2869:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2852:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:30:17"
                },
                {
                  "expression": {
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 808,
                      "name": "_numOGEmployees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "2927:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 809,
                        "name": "lockedTeamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "2945:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2945:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2927:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:44:17"
                },
                {
                  "expression": {
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 813,
                      "name": "_OGTeamTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "3043:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 814,
                      "name": "ogTeamTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "3059:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3043:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:28:17"
                },
                {
                  "body": {
                    "id": 887,
                    "nodeType": "Block",
                    "src": "3189:847:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 829,
                                  "name": "lockedTeamAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 794,
                                  "src": "3270:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 831,
                                "indexExpression": {
                                  "id": 830,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 818,
                                  "src": "3290:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3270:22:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3304:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3296:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 832,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3296:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3296:10:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3270:36:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b6564207465616d2061646472657373206973207a65726f2061646472657373",
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3308:50:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c5da09239ab5ea867b94994e1f892bbc509efd21b7bb130a5d29c647fb39b0e",
                                "typeString": "literal_string \"Constructor: locked team address is zero address\""
                              },
                              "value": "Constructor: locked team address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9c5da09239ab5ea867b94994e1f892bbc509efd21b7bb130a5d29c647fb39b0e",
                                "typeString": "literal_string \"Constructor: locked team address is zero address\""
                              }
                            ],
                            "id": 828,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3262:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3262:97:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "3262:97:17"
                      },
                      {
                        "assignments": [
                          841
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 841,
                            "mutability": "mutable",
                            "name": "_amount",
                            "nameLocation": "3454:7:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 887,
                            "src": "3446:15:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 840,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3446:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 846,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 842,
                            "name": "_OGTeamTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "3464:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 843,
                                "name": "_numOGEmployees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 775,
                                "src": "3479:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 844,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3478:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3464:31:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3446:49:17"
                      },
                      {
                        "assignments": [
                          849
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 849,
                            "mutability": "mutable",
                            "name": "employee",
                            "nameLocation": "3572:8:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 887,
                            "src": "3556:24:17",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                              "typeString": "struct LockContract.Employee"
                            },
                            "typeName": {
                              "id": 848,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 847,
                                "name": "Employee",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 761,
                                "src": "3556:8:17"
                              },
                              "referencedDeclaration": 761,
                              "src": "3556:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$761_storage_ptr",
                                "typeString": "struct LockContract.Employee"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 865,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 851,
                                "name": "lockedTeamAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "3592:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 853,
                              "indexExpression": {
                                "id": 852,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 818,
                                "src": "3612:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3592:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 854,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3616:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 855,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "3619:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 858,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3635:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 859,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3635:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3628:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 856,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3628:6:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3628:23:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3653:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3656:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3662:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 850,
                            "name": "Employee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "3583:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Employee_$761_storage_ptr_$",
                              "typeString": "type(struct LockContract.Employee storage pointer)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3583:84:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                            "typeString": "struct LockContract.Employee memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3556:111:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 869,
                              "name": "employee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "3765:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                                "typeString": "struct LockContract.Employee memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                                "typeString": "struct LockContract.Employee memory"
                              }
                            ],
                            "expression": {
                              "id": 866,
                              "name": "_employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "3749:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Employee_$761_storage_$dyn_storage",
                                "typeString": "struct LockContract.Employee storage ref[] storage ref"
                              }
                            },
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3749:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Employee_$761_storage_$dyn_storage_ptr_$_t_struct$_Employee_$761_storage_$returns$__$bound_to$_t_array$_t_struct$_Employee_$761_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct LockContract.Employee storage ref[] storage pointer,struct LockContract.Employee storage ref)"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3749:25:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "3749:25:17"
                      },
                      {
                        "expression": {
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 872,
                              "name": "_walletToEmployee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 746,
                              "src": "3847:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                                "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                              }
                            },
                            "id": 876,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 873,
                                "name": "lockedTeamAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "3865:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 875,
                              "indexExpression": {
                                "id": 874,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 818,
                                "src": "3885:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3865:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3847:41:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$761_storage",
                              "typeString": "struct LockContract.Employee storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 877,
                            "name": "employee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "3889:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                              "typeString": "struct LockContract.Employee memory"
                            }
                          },
                          "src": "3847:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Employee_$761_storage",
                            "typeString": "struct LockContract.Employee storage ref"
                          }
                        },
                        "id": 879,
                        "nodeType": "ExpressionStatement",
                        "src": "3847:50:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 881,
                                "name": "lockedTeamAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "3993:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 883,
                              "indexExpression": {
                                "id": 882,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 818,
                                "src": "4013:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3993:22:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 884,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 841,
                              "src": "4017:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 880,
                            "name": "delegate_to_employee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "3972:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3972:53:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "3972:53:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 821,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "3155:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 822,
                        "name": "lockedTeamAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 794,
                        "src": "3157:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3157:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3155:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 888,
                  "initializationExpression": {
                    "assignments": [
                      818
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3150:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "3145:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3145:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 820,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3152:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3145:8:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3185:3:17",
                      "subExpression": {
                        "id": 825,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "3185:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 827,
                    "nodeType": "ExpressionStatement",
                    "src": "3185:3:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "3140:896:17"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 889,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "4081:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 890,
                      "name": "tokenAdress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "4090:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4081:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:20:17"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 893,
                      "name": "_wDHN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "4111:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$722",
                        "typeString": "contract IVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 894,
                      "name": "wDHN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 783,
                      "src": "4119:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVotes_$722",
                        "typeString": "contract IVotes"
                      }
                    },
                    "src": "4111:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$722",
                      "typeString": "contract IVotes"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "4111:12:17"
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 897,
                      "name": "_initLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "4178:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 898,
                      "name": "initLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "4190:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4178:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "4178:20:17"
                }
              ]
            },
            "documentation": {
              "id": 780,
              "nodeType": "StructuredDocumentation",
              "src": "2445:95:17",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 902,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "wDHN",
                  "nameLocation": "2573:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2566:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotes_$722",
                    "typeString": "contract IVotes"
                  },
                  "typeName": {
                    "id": 782,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 781,
                      "name": "IVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 722,
                      "src": "2566:6:17"
                    },
                    "referencedDeclaration": 722,
                    "src": "2566:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$722",
                      "typeString": "contract IVotes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "numMilestones",
                  "nameLocation": "2595:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2587:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "ogTeamTokens",
                  "nameLocation": "2626:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2618:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "initLock",
                  "nameLocation": "2656:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2648:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "tokenAdress",
                  "nameLocation": "2682:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2674:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "lockedTeamAddresses",
                  "nameLocation": "2720:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2703:36:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 792,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2703:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 793,
                    "nodeType": "ArrayTypeName",
                    "src": "2703:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "lockedTeamTokens",
                  "nameLocation": "2766:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "2749:33:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 795,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2749:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 796,
                    "nodeType": "ArrayTypeName",
                    "src": "2749:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2556:232:17"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:17"
            },
            "scope": 1131,
            "src": "2545:1660:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "4364:136:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 908,
                              "name": "_walletToEmployee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 746,
                              "src": "4382:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                                "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                              }
                            },
                            "id": 910,
                            "indexExpression": {
                              "id": 909,
                              "name": "callerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 905,
                              "src": "4400:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4382:32:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$761_storage",
                              "typeString": "struct LockContract.Employee storage ref"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "employment_status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 758,
                          "src": "4382:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4436:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4382:58:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732061646472657373206973206e6f20612063757272656e7420656d706c6f796565",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4442:39:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a21d6c84b7dc52c67fa114e8bf1f995cdc3b35ddb4cc5d54fb5a34914e7d070",
                          "typeString": "literal_string \"This address is no a current employee\""
                        },
                        "value": "This address is no a current employee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a21d6c84b7dc52c67fa114e8bf1f995cdc3b35ddb4cc5d54fb5a34914e7d070",
                          "typeString": "literal_string \"This address is no a current employee\""
                        }
                      ],
                      "id": 907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4374:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4374:108:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "4374:108:17"
                },
                {
                  "id": 917,
                  "nodeType": "PlaceholderStatement",
                  "src": "4492:1:17"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "4212:102:17",
              "text": " @dev Modifier that only allows current employess to interact with certain functions"
            },
            "id": 919,
            "name": "onlyEmployees",
            "nameLocation": "4328:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "callerAddress",
                  "nameLocation": "4350:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "4342:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4341:23:17"
            },
            "src": "4319:181:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "4834:605:17",
              "statements": [
                {
                  "assignments": [
                    928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 928,
                      "mutability": "mutable",
                      "name": "currentMileStone",
                      "nameLocation": "4908:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 954,
                      "src": "4901:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 927,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "4901:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 933,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 929,
                        "name": "_walletToEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "4927:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                          "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                        }
                      },
                      "id": 931,
                      "indexExpression": {
                        "id": 930,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "4945:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4927:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_storage",
                        "typeString": "struct LockContract.Employee storage ref"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "milestone",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "4927:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4901:69:17"
                },
                {
                  "assignments": [
                    935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "lock_start",
                      "nameLocation": "5051:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 954,
                      "src": "5044:17:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "5044:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 940,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 936,
                        "name": "_walletToEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "5064:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                          "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                        }
                      },
                      "id": 938,
                      "indexExpression": {
                        "id": 937,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "5082:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5064:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_storage",
                        "typeString": "struct LockContract.Employee storage ref"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lock_start",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 754,
                    "src": "5064:44:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5044:64:17"
                },
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "milestone_date",
                      "nameLocation": "5275:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 954,
                      "src": "5267:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 951,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 943,
                        "name": "lock_start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "5292:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 944,
                        "name": "_initLock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "5305:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5292:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "hexValue": "3330",
                            "id": 946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5317:7:17",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          }
                        ],
                        "id": 947,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5316:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2592000_by_1",
                          "typeString": "int_const 2592000"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 948,
                        "name": "currentMileStone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 928,
                        "src": "5326:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "5316:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "5292:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5267:75:17"
                },
                {
                  "expression": {
                    "id": 952,
                    "name": "milestone_date",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 942,
                    "src": "5418:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 926,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "5411:21:17"
                }
              ]
            },
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "4507:242:17",
              "text": " @dev Calculates the date of the next milestone (used to see if the milestone has passed or not)\n --TO DO: remove the if stament, possibly only needed line 136 \n (need to see if 30 days can be multiplied by zero)"
            },
            "functionSelector": "af00cd91",
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_date",
            "nameLocation": "4763:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "4780:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "4772:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4771:24:17"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "4825:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4824:9:17"
            },
            "scope": 1131,
            "src": "4754:685:17",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "5629:249:17",
              "statements": [
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "5647:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "5639:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5639:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 974,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5677:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5677:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 970,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5696:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5696:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5689:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 968,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "5689:6:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5689:23:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 965,
                      "name": "_vestingSchedule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "5660:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$returns$_t_uint256_$",
                        "typeString": "function (address,uint64) returns (uint256)"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5660:53:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5639:74:17"
                },
                {
                  "expression": {
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 975,
                      "name": "_erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "5723:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 976,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "5741:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5723:28:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "5723:28:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 980,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 779,
                        "src": "5780:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 981,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "5788:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 979,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "5766:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "EmitStatement",
                  "src": "5761:38:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 988,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 779,
                            "src": "5839:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 987,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4060,
                          "src": "5832:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$4060_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5832:14:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4060",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5848:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5848:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 992,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "5860:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$4060",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 984,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "5809:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$2501_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "5809:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4060_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5809:62:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "5809:62:17"
                }
              ]
            },
            "documentation": {
              "id": 956,
              "nodeType": "StructuredDocumentation",
              "src": "5446:119:17",
              "text": " @dev Release the tokens according to milestone passage.\n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 959,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5618:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5618:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 961,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 958,
                  "name": "onlyEmployees",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 919,
                  "src": "5604:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "5604:25:17"
              }
            ],
            "name": "release",
            "nameLocation": "5579:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5586:2:17"
            },
            "returnParameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5629:0:17"
            },
            "scope": 1131,
            "src": "5570:308:17",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1054,
              "nodeType": "Block",
              "src": "6107:956:17",
              "statements": [
                {
                  "assignments": [
                    1007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1007,
                      "mutability": "mutable",
                      "name": "currentMileStone",
                      "nameLocation": "6180:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1054,
                      "src": "6173:23:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1006,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "6173:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1012,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1008,
                        "name": "_walletToEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "6199:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                          "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                        }
                      },
                      "id": 1010,
                      "indexExpression": {
                        "id": 1009,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "6217:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6199:33:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_storage",
                        "typeString": "struct LockContract.Employee storage ref"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "milestone",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 756,
                    "src": "6199:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6173:69:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1014,
                          "name": "currentMileStone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "6261:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1015,
                          "name": "_numMilestones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "6280:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6261:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c206d696c6573746f6e6520726577617264732068617665206265656e20636c61696d6564",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6296:41:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90ae35c68b2e2d79570cde712119be28b8f71f2d2cea2c2c09fd97b00afee7c1",
                          "typeString": "literal_string \"All milestone rewards have been claimed\""
                        },
                        "value": "All milestone rewards have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90ae35c68b2e2d79570cde712119be28b8f71f2d2cea2c2c09fd97b00afee7c1",
                          "typeString": "literal_string \"All milestone rewards have been claimed\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6253:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6253:85:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "6253:85:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1020,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "6424:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1022,
                          "name": "_callerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "6445:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1021,
                        "name": "get_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "6436:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6436:24:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6424:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "7024:33:17",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7045:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1005,
                        "id": 1051,
                        "nodeType": "Return",
                        "src": "7038:8:17"
                      }
                    ]
                  },
                  "id": 1053,
                  "nodeType": "IfStatement",
                  "src": "6420:637:17",
                  "trueBody": {
                    "id": 1049,
                    "nodeType": "Block",
                    "src": "6462:556:17",
                    "statements": [
                      {
                        "assignments": [
                          1026
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1026,
                            "mutability": "mutable",
                            "name": "can_withdraw",
                            "nameLocation": "6629:12:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 1049,
                            "src": "6621:20:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1025,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6621:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1034,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1027,
                                "name": "_walletToEmployee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "6644:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                                  "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                                }
                              },
                              "id": 1029,
                              "indexExpression": {
                                "id": 1028,
                                "name": "_callerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "6662:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6644:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$761_storage",
                                "typeString": "struct LockContract.Employee storage ref"
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokens_promised",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 752,
                            "src": "6644:49:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1031,
                                "name": "_numMilestones",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "6695:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1032,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6694:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6644:66:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6621:89:17"
                      },
                      {
                        "expression": {
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1035,
                                "name": "_walletToEmployee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "6822:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                                  "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                                }
                              },
                              "id": 1037,
                              "indexExpression": {
                                "id": 1036,
                                "name": "_callerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 999,
                                "src": "6840:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6822:33:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$761_storage",
                                "typeString": "struct LockContract.Employee storage ref"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "milestone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 756,
                            "src": "6822:43:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1039,
                                  "name": "_walletToEmployee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 746,
                                  "src": "6868:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                                    "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                                  }
                                },
                                "id": 1041,
                                "indexExpression": {
                                  "id": 1040,
                                  "name": "_callerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 999,
                                  "src": "6886:14:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6868:33:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Employee_$761_storage",
                                  "typeString": "struct LockContract.Employee storage ref"
                                }
                              },
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "milestone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 756,
                              "src": "6868:43:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6912:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6868:45:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "6822:91:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1046,
                        "nodeType": "ExpressionStatement",
                        "src": "6822:91:17"
                      },
                      {
                        "expression": {
                          "id": 1047,
                          "name": "can_withdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "6994:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1005,
                        "id": 1048,
                        "nodeType": "Return",
                        "src": "6987:19:17"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 997,
              "nodeType": "StructuredDocumentation",
              "src": "5885:114:17",
              "text": " @dev This returns the amount of tokens that can be withdrawn, as function of milestones passed."
            },
            "id": 1055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_vestingSchedule",
            "nameLocation": "6013:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "6038:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "6030:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "6061:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "6054:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6054:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6029:42:17"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "6098:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6098:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6097:9:17"
            },
            "scope": 1131,
            "src": "6004:1059:17",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "7229:522:17",
              "statements": [
                {
                  "assignments": [
                    1065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1065,
                      "mutability": "mutable",
                      "name": "employee",
                      "nameLocation": "7305:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "7289:24:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                        "typeString": "struct LockContract.Employee"
                      },
                      "typeName": {
                        "id": 1064,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1063,
                          "name": "Employee",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 761,
                          "src": "7289:8:17"
                        },
                        "referencedDeclaration": 761,
                        "src": "7289:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$761_storage_ptr",
                          "typeString": "struct LockContract.Employee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1067,
                        "name": "new_employee_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "7325:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7347:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1069,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "7350:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1072,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7365:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7365:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7358:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 1070,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "7358:6:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7358:23:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7382:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7385:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7391:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1066,
                      "name": "Employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "7316:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Employee_$761_storage_ptr_$",
                        "typeString": "type(struct LockContract.Employee storage pointer)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7316:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                      "typeString": "struct LockContract.Employee memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7289:108:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1083,
                        "name": "employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "7495:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                          "typeString": "struct LockContract.Employee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                          "typeString": "struct LockContract.Employee memory"
                        }
                      ],
                      "expression": {
                        "id": 1080,
                        "name": "_employees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "7479:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Employee_$761_storage_$dyn_storage",
                          "typeString": "struct LockContract.Employee storage ref[] storage ref"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7479:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Employee_$761_storage_$dyn_storage_ptr_$_t_struct$_Employee_$761_storage_$returns$__$bound_to$_t_array$_t_struct$_Employee_$761_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct LockContract.Employee storage ref[] storage pointer,struct LockContract.Employee storage ref)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7479:25:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "7479:25:17"
                },
                {
                  "expression": {
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1086,
                        "name": "_walletToEmployee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "7577:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                          "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                        }
                      },
                      "id": 1088,
                      "indexExpression": {
                        "id": 1087,
                        "name": "new_employee_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "7595:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7577:39:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_storage",
                        "typeString": "struct LockContract.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1089,
                      "name": "employee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "7617:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$761_memory_ptr",
                        "typeString": "struct LockContract.Employee memory"
                      }
                    },
                    "src": "7577:48:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$761_storage",
                      "typeString": "struct LockContract.Employee storage ref"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "7577:48:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1095,
                        "name": "new_employee_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "7715:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "7737:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1092,
                        "name": "_wDHN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "7700:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotes_$722",
                          "typeString": "contract IVotes"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "7700:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7700:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "7700:44:17"
                }
              ]
            },
            "documentation": {
              "id": 1056,
              "nodeType": "StructuredDocumentation",
              "src": "7069:80:17",
              "text": " @dev Adds a new employee. --TO DO: See how the split enters--"
            },
            "functionSelector": "79ecbc38",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "new_employee",
            "nameLocation": "7163:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7184:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "7176:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7176:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "new_employee_address",
                  "nameLocation": "7200:20:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "7192:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7192:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7175:46:17"
            },
            "returnParameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7229:0:17"
            },
            "scope": 1131,
            "src": "7154:597:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "7928:77:17",
              "statements": [
                {
                  "expression": {
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1106,
                          "name": "_walletToEmployee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 746,
                          "src": "7938:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Employee_$761_storage_$",
                            "typeString": "mapping(address => struct LockContract.Employee storage ref)"
                          }
                        },
                        "id": 1108,
                        "indexExpression": {
                          "id": 1107,
                          "name": "employeeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "7956:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7938:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$761_storage",
                          "typeString": "struct LockContract.Employee storage ref"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "employment_status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 758,
                      "src": "7938:52:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7993:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7938:60:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "7938:60:17"
                }
              ]
            },
            "documentation": {
              "id": 1101,
              "nodeType": "StructuredDocumentation",
              "src": "7757:109:17",
              "text": " @dev Changes the employee status of an employee who is quitting. --TO DO: Make multi-sig--"
            },
            "functionSelector": "b5d66455",
            "id": 1114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove_employee",
            "nameLocation": "7880:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "employeeAddress",
                  "nameLocation": "7904:15:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "7896:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7896:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7895:25:17"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7928:0:17"
            },
            "scope": 1131,
            "src": "7871:134:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "8146:49:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1125,
                        "name": "employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "8171:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1126,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "8181:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1122,
                        "name": "_wDHN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "8156:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotes_$722",
                          "typeString": "contract IVotes"
                        }
                      },
                      "id": 1124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 703,
                      "src": "8156:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8156:32:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "ExpressionStatement",
                  "src": "8156:32:17"
                }
              ]
            },
            "documentation": {
              "id": 1115,
              "nodeType": "StructuredDocumentation",
              "src": "8011:57:17",
              "text": " @dev Delegates the voting power to the"
            },
            "id": 1130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate_to_employee",
            "nameLocation": "8082:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "employee",
                  "nameLocation": "8111:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "8103:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8103:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8129:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "8121:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8121:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8102:34:17"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8146:0:17"
            },
            "scope": 1131,
            "src": "8073:122:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1132,
        "src": "816:7381:17",
        "usedErrors": []
      }
    ],
    "src": "107:8090:17"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001338380380620013388339810160408190526200003491620005b1565b600080546001600160a01b0319166001600160a01b0389161781556005879055825160075560068690555b82518110156200040c5760006001600160a01b0316838281518110620000895762000089620006cc565b60200260200101516001600160a01b031603620001055760405162461bcd60e51b815260206004820152603060248201527f436f6e7374727563746f723a206c6f636b6564207465616d206164647265737360448201526f206973207a65726f206164647265737360801b606482015260840160405180910390fd5b6000600754600654620001199190620006e2565b905060006040518060e001604052808685815181106200013d576200013d620006cc565b6020908102919091018101516001600160a01b03908116835260008383018190526040808501889052426001600160401b039081166060808801919091526080808801859052600160a0808a0182905260c0998a018290526002805480840182559088528b517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600490920291820180546001600160a01b03191691909a1617909855978a01517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf880155938901517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0870155908801517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad19095018054918901519689015197890151959092166001600160501b0319909116176801000000000000000061ffff909616959095029490941761ffff60501b19166a01000000000000000000009515159590950260ff60581b1916949094176b010000000000000000000000921515929092029190911790915587519293508392889087908110620002ec57620002ec620006cc565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020845181546001600160a01b031916941693909317835583015160018301558201516002820155606082015160039091018054608084015160a085015160c0909501516001600160401b039094166001600160501b0319909216919091176801000000000000000061ffff909216919091021761ffff60501b19166a01000000000000000000009315159390930260ff60581b1916929092176b010000000000000000000000911515919091021790558451620003f490869085908110620003df57620003df620006cc565b6020026020010151836200044a60201b60201c565b50508080620004039062000705565b9150506200005f565b5050600980546001600160a01b039384166001600160a01b03199182161790915560008054979093169616959095179055600355506200072d915050565b60005460405163026e402b60e01b81526001600160a01b038481166004830152602482018490529091169063026e402b90604401600060405180830381600087803b1580156200049957600080fd5b505af1158015620004ae573d6000803e3d6000fd5b505050505050565b6001600160a01b0381168114620004cc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005105762000510620004cf565b604052919050565b60006001600160401b03821115620005345762000534620004cf565b5060051b60200190565b600082601f8301126200055057600080fd5b8151602062000569620005638362000518565b620004e5565b82815260059290921b840181019181810190868411156200058957600080fd5b8286015b84811015620005a657805183529183019183016200058d565b509695505050505050565b600080600080600080600060e0888a031215620005cd57600080fd5b8751620005da81620004b6565b809750506020808901519650604089015195506060890151945060808901516200060481620004b6565b60a08a01519094506001600160401b03808211156200062257600080fd5b818b0191508b601f8301126200063757600080fd5b815162000648620005638262000518565b81815260059190911b8301840190848101908e8311156200066857600080fd5b938501935b82851015620006935784516200068381620004b6565b825293850193908501906200066d565b60c08e01519097509450505080831115620006ad57600080fd5b5050620006bd8a828b016200053e565b91505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b6000826200070057634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016200072657634e487b7160e01b600052601160045260246000fd5b5060010190565b610bfb806200073d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063584697821461006757806371a9f6721461012a57806379ecbc381461015557806386d1a69f1461016a578063af00cd9114610172578063b5d6645514610193575b600080fd5b6100d5610075366004610a3c565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919067ffffffffffffffff81169061ffff600160401b8204169060ff600160501b8204811691600160581b90041687565b604080516001600160a01b03909816885260208801969096529486019390935267ffffffffffffffff909116606085015261ffff166080840152151560a0830152151560c082015260e0015b60405180910390f35b60005461013d906001600160a01b031681565b6040516001600160a01b039091168152602001610121565b610168610163366004610a57565b6101c8565b005b6101686104a7565b610185610180366004610a3c565b6105ab565b604051908152602001610121565b6101686101a1366004610a3c565b6001600160a01b03166000908152600160205260409020600301805460ff60501b19169055565b60006040518060e00160405280836001600160a01b03168152602001600081526020018481526020014267ffffffffffffffff168152602001600061ffff168152602001600115158152602001600015158152509050600281908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548161ffff021916908361ffff16021790555060a082015181600301600a6101000a81548160ff02191690831515021790555060c082015181600301600b6101000a81548160ff02191690831515021790555050508060016000846001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548161ffff021916908361ffff16021790555060a082015181600301600a6101000a81548160ff02191690831515021790555060c082015181600301600b6101000a81548160ff02191690831515021790555090505060008054906101000a90046001600160a01b03166001600160a01b031663026e402b83856040518363ffffffff1660e01b81526004016104709291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b50505050505050565b33600081815260016020819052604090912060030154600160501b900460ff161515146105295760405162461bcd60e51b815260206004820152602560248201527f546869732061646472657373206973206e6f20612063757272656e7420656d706044820152646c6f79656560d81b60648201526084015b60405180910390fd5b6000610535334261061b565b905080600460008282546105499190610a99565b90915550506009546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26009546105a7906001600160a01b03163383610774565b5050565b6001600160a01b03811660009081526001602052604081206003015461ffff600160401b8204169067ffffffffffffffff16826105eb8362278d00610ab1565b62ffffff166003548367ffffffffffffffff166106089190610a99565b6106129190610a99565b95945050505050565b6001600160a01b038216600090815260016020526040812060030154600554600160401b90910461ffff169081106106a55760405162461bcd60e51b815260206004820152602760248201527f416c6c206d696c6573746f6e6520726577617264732068617665206265656e2060448201526618db185a5b595960ca1b6064820152608401610520565b6106ae846105ab565b8367ffffffffffffffff161115610768576005546001600160a01b03851660009081526001602052604081206002015490916106e991610adc565b6001600160a01b03861660009081526001602081905260409091206003015491925061072091600160401b900461ffff1690610afe565b6001600160a01b0386166000908152600160205260409020600301805461ffff92909216600160401b0269ffff000000000000000019909216919091179055915061076e9050565b60009150505b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107c69084906107cb565b505050565b6000610820826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661089d9092919063ffffffff16565b8051909150156107c6578080602001905181019061083e9190610b24565b6107c65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610520565b60606108ac84846000856108b6565b90505b9392505050565b6060824710156109175760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610520565b6001600160a01b0385163b61096e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610520565b600080866001600160a01b0316858760405161098a9190610b76565b60006040518083038185875af1925050503d80600081146109c7576040519150601f19603f3d011682016040523d82523d6000602084013e6109cc565b606091505b50915091506109dc8282866109e7565b979650505050505050565b606083156109f65750816108af565b825115610a065782518084602001fd5b8160405162461bcd60e51b81526004016105209190610b92565b80356001600160a01b0381168114610a3757600080fd5b919050565b600060208284031215610a4e57600080fd5b6108af82610a20565b60008060408385031215610a6a57600080fd5b82359150610a7a60208401610a20565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aac57610aac610a83565b500190565b600062ffffff80831681851681830481118215151615610ad357610ad3610a83565b02949350505050565b600082610af957634e487b7160e01b600052601260045260246000fd5b500490565b600061ffff808316818516808303821115610b1b57610b1b610a83565b01949350505050565b600060208284031215610b3657600080fd5b815180151581146108af57600080fd5b60005b83811015610b61578181015183820152602001610b49565b83811115610b70576000848401525b50505050565b60008251610b88818460208701610b46565b9190910192915050565b6020815260008251806020840152610bb1816040850160208701610b46565b601f01601f1916919091016040019291505056fea26469706673582212209be562b8b814351d81c5634bdb10abb9ca5f1bd858a7deaa3d488ffe6bb1a6eb64736f6c634300080f0033",
  "bytecodeSha1": "fad4bb67653e145f77f003f644d497bf9ef8c389",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "1": {},
      "16": {},
      "17": {
        "LockContract._vestingSchedule": {
          "21": [
            6261,
            6294,
            true
          ],
          "22": [
            6424,
            6460,
            false
          ]
        },
        "LockContract.release": {
          "20": [
            4382,
            4440,
            true
          ]
        }
      },
      "6": {
        "SafeERC20._callOptionalReturn": {
          "26": [
            3735,
            3756,
            false
          ],
          "27": [
            3819,
            3849,
            true
          ]
        }
      },
      "7": {
        "Address.functionCallWithValue": {
          "23": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "24": [
            7735,
            7742,
            false
          ],
          "25": [
            7876,
            7897,
            false
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "1": {},
      "16": {},
      "17": {
        "LockContract._vestingSchedule": {
          "7": [
            6253,
            6338
          ],
          "8": [
            6822,
            6913
          ],
          "9": [
            6987,
            7006
          ],
          "10": [
            7038,
            7046
          ]
        },
        "LockContract.new_employee": {
          "1": [
            7479,
            7504
          ],
          "2": [
            7577,
            7625
          ],
          "3": [
            7700,
            7744
          ]
        },
        "LockContract.release": {
          "4": [
            5723,
            5751
          ],
          "5": [
            5761,
            5799
          ],
          "6": [
            5809,
            5871
          ]
        },
        "LockContract.remove_employee": {
          "0": [
            7938,
            7998
          ]
        }
      },
      "6": {
        "SafeERC20._callOptionalReturn": {
          "12": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "11": [
            813,
            899
          ]
        }
      },
      "7": {
        "Address.functionCall": {
          "13": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "14": [
            5137,
            5218
          ],
          "16": [
            5228,
            5288
          ],
          "17": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "15": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "18": [
            7758,
            7775
          ],
          "19": [
            8202,
            8222
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "IVotes",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063584697821461006757806371a9f6721461012a57806379ecbc381461015557806386d1a69f1461016a578063af00cd9114610172578063b5d6645514610193575b600080fd5b6100d5610075366004610a3c565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b039093169290919067ffffffffffffffff81169061ffff600160401b8204169060ff600160501b8204811691600160581b90041687565b604080516001600160a01b03909816885260208801969096529486019390935267ffffffffffffffff909116606085015261ffff166080840152151560a0830152151560c082015260e0015b60405180910390f35b60005461013d906001600160a01b031681565b6040516001600160a01b039091168152602001610121565b610168610163366004610a57565b6101c8565b005b6101686104a7565b610185610180366004610a3c565b6105ab565b604051908152602001610121565b6101686101a1366004610a3c565b6001600160a01b03166000908152600160205260409020600301805460ff60501b19169055565b60006040518060e00160405280836001600160a01b03168152602001600081526020018481526020014267ffffffffffffffff168152602001600061ffff168152602001600115158152602001600015158152509050600281908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548161ffff021916908361ffff16021790555060a082015181600301600a6101000a81548160ff02191690831515021790555060c082015181600301600b6101000a81548160ff02191690831515021790555050508060016000846001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548161ffff021916908361ffff16021790555060a082015181600301600a6101000a81548160ff02191690831515021790555060c082015181600301600b6101000a81548160ff02191690831515021790555090505060008054906101000a90046001600160a01b03166001600160a01b031663026e402b83856040518363ffffffff1660e01b81526004016104709291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b50505050505050565b33600081815260016020819052604090912060030154600160501b900460ff161515146105295760405162461bcd60e51b815260206004820152602560248201527f546869732061646472657373206973206e6f20612063757272656e7420656d706044820152646c6f79656560d81b60648201526084015b60405180910390fd5b6000610535334261061b565b905080600460008282546105499190610a99565b90915550506009546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26009546105a7906001600160a01b03163383610774565b5050565b6001600160a01b03811660009081526001602052604081206003015461ffff600160401b8204169067ffffffffffffffff16826105eb8362278d00610ab1565b62ffffff166003548367ffffffffffffffff166106089190610a99565b6106129190610a99565b95945050505050565b6001600160a01b038216600090815260016020526040812060030154600554600160401b90910461ffff169081106106a55760405162461bcd60e51b815260206004820152602760248201527f416c6c206d696c6573746f6e6520726577617264732068617665206265656e2060448201526618db185a5b595960ca1b6064820152608401610520565b6106ae846105ab565b8367ffffffffffffffff161115610768576005546001600160a01b03851660009081526001602052604081206002015490916106e991610adc565b6001600160a01b03861660009081526001602081905260409091206003015491925061072091600160401b900461ffff1690610afe565b6001600160a01b0386166000908152600160205260409020600301805461ffff92909216600160401b0269ffff000000000000000019909216919091179055915061076e9050565b60009150505b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526107c69084906107cb565b505050565b6000610820826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661089d9092919063ffffffff16565b8051909150156107c6578080602001905181019061083e9190610b24565b6107c65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610520565b60606108ac84846000856108b6565b90505b9392505050565b6060824710156109175760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610520565b6001600160a01b0385163b61096e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610520565b600080866001600160a01b0316858760405161098a9190610b76565b60006040518083038185875af1925050503d80600081146109c7576040519150601f19603f3d011682016040523d82523d6000602084013e6109cc565b606091505b50915091506109dc8282866109e7565b979650505050505050565b606083156109f65750816108af565b825115610a065782518084602001fd5b8160405162461bcd60e51b81526004016105209190610b92565b80356001600160a01b0381168114610a3757600080fd5b919050565b600060208284031215610a4e57600080fd5b6108af82610a20565b60008060408385031215610a6a57600080fd5b82359150610a7a60208401610a20565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aac57610aac610a83565b500190565b600062ffffff80831681851681830481118215151615610ad357610ad3610a83565b02949350505050565b600082610af957634e487b7160e01b600052601260045260246000fd5b500490565b600061ffff808316818516808303821115610b1b57610b1b610a83565b01949350505050565b600060208284031215610b3657600080fd5b815180151581146108af57600080fd5b60005b83811015610b61578181015183820152602001610b49565b83811115610b70576000848401525b50505050565b60008251610b88818460208701610b46565b9190910192915050565b6020815260008251806020840152610bb1816040850160208701610b46565b601f01601f1916919091016040019291505056fea26469706673582212209be562b8b814351d81c5634bdb10abb9ca5f1bd858a7deaa3d488ffe6bb1a6eb64736f6c634300080f0033",
  "deployedSourceMap": "816:7381:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;988:53:17;;;;;;;;;;;;-1:-1:-1;;;988:53:17;;;;;-1:-1:-1;;;988:53:17;;;;;-1:-1:-1;;;988:53:17;;;;;;;;;-1:-1:-1;;;;;700:32:19;;;682:51;;764:2;749:18;;742:34;;;;792:18;;;785:34;;;;867:18;855:31;;;850:2;835:18;;828:59;936:6;924:19;918:3;903:19;;896:48;988:14;981:22;720:3;960:19;;953:51;1048:14;1041:22;1035:3;1020:19;;1013:51;669:3;654:19;988:53:17;;;;;;;;868:19;;;;;-1:-1:-1;;;;;868:19:17;;;;;;-1:-1:-1;;;;;1253:32:19;;;1235:51;;1223:2;1208:18;868:19:17;1075:217:19;7154:597:17;;;;;;:::i;:::-;;:::i;:::-;;5570:308;;;:::i;4754:685::-;;;;;;:::i;:::-;;:::i;:::-;;;1702:25:19;;;1690:2;1675:18;4754:685:17;1556:177:19;7871:134:17;;;;;;:::i;:::-;-1:-1:-1;;;;;7938:34:17;7993:5;7938:34;;;:17;:34;;;;;:52;;:60;;-1:-1:-1;;;;7938:60:17;;;7871:134;7154:597;7289:24;7316:81;;;;;;;;7325:20;-1:-1:-1;;;;;7316:81:17;;;;;7347:1;7316:81;;;;7350:6;7316:81;;;;7365:15;7316:81;;;;;;7382:1;7316:81;;;;;;7385:4;7316:81;;;;;;7391:5;7316:81;;;;;7289:108;;7479:10;7495:8;7479:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7479:25:17;;;;;-1:-1:-1;;;;;7479:25:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7617:8;7577:17;:39;7595:20;-1:-1:-1;;;;;7577:39:17;-1:-1:-1;;;;;7577:39:17;;;;;;;;;;;;:48;;;;;;;;;;;;;-1:-1:-1;;;;;7577:48:17;;;;;-1:-1:-1;;;;;7577:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7700:5;;;;;;;;-1:-1:-1;;;;;7700:5:17;-1:-1:-1;;;;;7700:14:17;;7715:20;7737:6;7700:44;;;;;;;;;;;;;;;-1:-1:-1;;;;;1930:32:19;;;;1912:51;;1994:2;1979:18;;1972:34;1900:2;1885:18;;1738:274;7700:44:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7229:522;7154:597;;:::o;5570:308::-;5618:10;4382:32;;;;:17;:32;;;;;;;;:50;;;-1:-1:-1;;;4382:50:17;;;;:58;;;4374:108;;;;-1:-1:-1;;;4374:108:17;;2219:2:19;4374:108:17;;;2201:21:19;2258:2;2238:18;;;2231:30;2297:34;2277:18;;;2270:62;-1:-1:-1;;;2348:18:19;;;2341:35;2393:19;;4374:108:17;;;;;;;;;5639:18:::1;5660:53;5677:10;5696:15;5660:16;:53::i;:::-;5639:74;;5741:10;5723:14;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5780:6:17::1;::::0;5766:33:::1;::::0;1702:25:19;;;-1:-1:-1;;;;;5780:6:17;;::::1;::::0;5766:33:::1;::::0;1690:2:19;1675:18;5766:33:17::1;;;;;;;5839:6;::::0;5809:62:::1;::::0;-1:-1:-1;;;;;5839:6:17::1;5848:10;5860::::0;5809:22:::1;:62::i;:::-;5629:249;5570:308:::0;:::o;4754:685::-;-1:-1:-1;;;;;4927:33:17;;4825:7;4927:33;;;:17;:33;;;;;:43;;;;-1:-1:-1;;;4927:43:17;;;;5064:44;;4825:7;5316:26;4927:43;5317:7;5316:26;:::i;:::-;5292:50;;5305:9;;5292:10;:22;;;;;;:::i;:::-;:50;;;;:::i;:::-;5267:75;4754:685;-1:-1:-1;;;;;4754:685:17:o;6004:1059::-;-1:-1:-1;;;;;6199:33:17;;6098:7;6199:33;;;:17;:33;;;;;:43;;;6280:14;;-1:-1:-1;;;6199:43:17;;;;;;6261:33;;6253:85;;;;-1:-1:-1;;;6253:85:17;;3155:2:19;6253:85:17;;;3137:21:19;3194:2;3174:18;;;3167:30;3233:34;3213:18;;;3206:62;-1:-1:-1;;;3284:18:19;;;3277:37;3331:19;;6253:85:17;2953:403:19;6253:85:17;6436:24;6445:14;6436:8;:24::i;:::-;6424:9;:36;;;6420:637;;;6695:14;;-1:-1:-1;;;;;6644:33:17;;6621:20;6644:33;;;:17;:33;;;;;:49;;;6621:20;;6644:66;;;:::i;:::-;-1:-1:-1;;;;;6868:33:17;;;;;;:17;:33;;;;;;;;:43;;;6621:89;;-1:-1:-1;6868:45:17;;-1:-1:-1;;;6868:43:17;;;;;:45;:::i;:::-;-1:-1:-1;;;;;6822:33:17;;;;;;:17;:33;;;;;:43;;:91;;;;;;;-1:-1:-1;;;6822:91:17;-1:-1:-1;;6822:91:17;;;;;;;;;6994:12;-1:-1:-1;6987:19:17;;-1:-1:-1;6987:19:17;6420:637;7045:1;7038:8;;;6004:1059;;;;;:::o;701:205:6:-;840:58;;;-1:-1:-1;;;;;1930:32:19;;840:58:6;;;1912:51:19;1979:18;;;;1972:34;;;840:58:6;;;;;;;;;;1885:18:19;;;;840:58:6;;;;;;;;-1:-1:-1;;;;;840:58:6;-1:-1:-1;;;840:58:6;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:6;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:6;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:6;;4296:2:19;3811:85:6;;;4278:21:19;4335:2;4315:18;;;4308:30;4374:34;4354:18;;;4347:62;-1:-1:-1;;;4425:18:19;;;4418:40;4475:19;;3811:85:6;4094:406:19;3861:223:7;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:7;;4707:2:19;5137:81:7;;;4689:21:19;4746:2;4726:18;;;4719:30;4785:34;4765:18;;;4758:62;-1:-1:-1;;;4836:18:19;;;4829:36;4882:19;;5137:81:7;4505:402:19;5137:81:7;-1:-1:-1;;;;;1465:19:7;;;5228:60;;;;-1:-1:-1;;;5228:60:7;;5114:2:19;5228:60:7;;;5096:21:19;5153:2;5133:18;;;5126:30;5192:31;5172:18;;;5165:59;5241:18;;5228:60:7;4912:353:19;5228:60:7;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:7;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:7:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:7;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:7;;;;;;;;:::i;14:173:19:-;82:20;;-1:-1:-1;;;;;131:31:19;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;1297:254::-;1365:6;1373;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1478:9;1465:23;1455:33;;1507:38;1541:2;1530:9;1526:18;1507:38;:::i;:::-;1497:48;;1297:254;;;;;:::o;2423:127::-;2484:10;2479:3;2475:20;2472:1;2465:31;2515:4;2512:1;2505:15;2539:4;2536:1;2529:15;2555:128;2595:3;2626:1;2622:6;2619:1;2616:13;2613:39;;;2632:18;;:::i;:::-;-1:-1:-1;2668:9:19;;2555:128::o;2688:260::-;2727:7;2759:8;2794:2;2791:1;2787:10;2824:2;2821:1;2817:10;2880:3;2876:2;2872:12;2867:3;2864:21;2857:3;2850:11;2843:19;2839:47;2836:73;;;2889:18;;:::i;:::-;2929:13;;2688:260;-1:-1:-1;;;;2688:260:19:o;3361:217::-;3401:1;3427;3417:132;;3471:10;3466:3;3462:20;3459:1;3452:31;3506:4;3503:1;3496:15;3534:4;3531:1;3524:15;3417:132;-1:-1:-1;3563:9:19;;3361:217::o;3583:224::-;3622:3;3650:6;3683:2;3680:1;3676:10;3713:2;3710:1;3706:10;3744:3;3740:2;3736:12;3731:3;3728:21;3725:47;;;3752:18;;:::i;:::-;3788:13;;3583:224;-1:-1:-1;;;;3583:224:19:o;3812:277::-;3879:6;3932:2;3920:9;3911:7;3907:23;3903:32;3900:52;;;3948:1;3945;3938:12;3900:52;3980:9;3974:16;4033:5;4026:13;4019:21;4012:5;4009:32;3999:60;;4055:1;4052;4045:12;5270:258;5342:1;5352:113;5366:6;5363:1;5360:13;5352:113;;;5442:11;;;5436:18;5423:11;;;5416:39;5388:2;5381:10;5352:113;;;5483:6;5480:1;5477:13;5474:48;;;5518:1;5509:6;5504:3;5500:16;5493:27;5474:48;;5270:258;;;:::o;5533:274::-;5662:3;5700:6;5694:13;5716:53;5762:6;5757:3;5750:4;5742:6;5738:17;5716:53;:::i;:::-;5785:16;;;;;5533:274;-1:-1:-1;;5533:274:19:o;5812:383::-;5961:2;5950:9;5943:21;5924:4;5993:6;5987:13;6036:6;6031:2;6020:9;6016:18;6009:34;6052:66;6111:6;6106:2;6095:9;6091:18;6086:2;6078:6;6074:15;6052:66;:::i;:::-;6179:2;6158:15;-1:-1:-1;;6154:29:19;6139:45;;;;6186:2;6135:54;;5812:383;-1:-1:-1;;5812:383:19:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "get_date(address)": {
        "details": "Calculates the date of the next milestone (used to see if the milestone has passed or not) --TO DO: remove the if stament, possibly only needed line 136  (need to see if 30 days can be multiplied by zero)"
      },
      "new_employee(uint256,address)": {
        "details": "Adds a new employee. --TO DO: See how the split enters--"
      },
      "release()": {
        "details": "Release the tokens according to milestone passage. Emits a {ERC20Released} event."
      },
      "remove_employee(address)": {
        "details": "Changes the employee status of an employee who is quitting. --TO DO: Make multi-sig--"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    816,
    8197
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58469782 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x71A9F672 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x79ECBC38 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xAF00CD91 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xB5D66455 EQ PUSH2 0x193 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x58 SHL SWAP1 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xFFFF AND PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x13D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x50 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x26E402B DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x470 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732061646472657373206973206E6F20612063757272656E7420656D70 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C6F796565 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x535 CALLER TIMESTAMP PUSH2 0x61B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x5A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x774 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x5EB DUP4 PUSH3 0x278D00 PUSH2 0xAB1 JUMP JUMPDEST PUSH3 0xFFFFFF AND PUSH1 0x3 SLOAD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x608 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x612 SWAP2 SWAP1 PUSH2 0xA99 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 DUP2 LT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C206D696C6573746F6E6520726577617264732068617665206265656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x18DB185A5B5959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x520 JUMP JUMPDEST PUSH2 0x6AE DUP5 PUSH2 0x5AB JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x768 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 PUSH2 0x6E9 SWAP2 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP PUSH2 0x720 SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH10 0xFFFF0000000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 POP PUSH2 0x76E SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x7C6 SWAP1 DUP5 SWAP1 PUSH2 0x7CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x820 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7C6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x520 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8AC DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x96E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x520 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x98A SWAP2 SWAP1 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9DC DUP3 DUP3 DUP7 PUSH2 0x9E7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x9F6 JUMPI POP DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xA06 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AF DUP3 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA7A PUSH1 0x20 DUP5 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xAAC JUMPI PUSH2 0xAAC PUSH2 0xA83 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAD3 JUMPI PUSH2 0xAD3 PUSH2 0xA83 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1B PUSH2 0xA83 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB49 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xB88 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xBB1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xE5 PUSH3 0xB8B814 CALLDATALOAD SAR DUP2 0xC5 PUSH4 0x4BDB10AB 0xB9 0xCA 0x5F SHL 0xD8 PC 0xA7 0xDE 0xAA RETURNDATASIZE BASEFEE DUP16 INVALID PUSH12 0xB1A6EB64736F6C634300080F STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x58469782"
    },
    "38": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x71A9F672"
    },
    "49": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12A"
    },
    "53": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x79ECBC38"
    },
    "60": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x155"
    },
    "64": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x86D1A69F"
    },
    "71": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16A"
    },
    "75": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAF00CD91"
    },
    "82": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x172"
    },
    "86": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB5D66455"
    },
    "93": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x193"
    },
    "97": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "DUP1",
      "path": "17"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        816,
        8197
      ],
      "op": "REVERT",
      "path": "17"
    },
    "103": {
      "offset": [
        988,
        1041
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "104": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD5"
    },
    "107": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x75"
    },
    "110": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "111": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "113": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA3C"
    },
    "116": {
      "fn": null,
      "jump": "i",
      "offset": [
        988,
        1041
      ],
      "op": "JUMP",
      "path": "17"
    },
    "117": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "118": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "120": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "122": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP2",
      "path": "17"
    },
    "123": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "124": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "127": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "128": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP3",
      "path": "17"
    },
    "129": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "130": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "132": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "133": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "134": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "135": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP1",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "138": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP2",
      "path": "17"
    },
    "139": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "ADD",
      "path": "17"
    },
    "140": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "141": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "143": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP3",
      "path": "17"
    },
    "144": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "ADD",
      "path": "17"
    },
    "145": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "146": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "148": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "149": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "150": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "ADD",
      "path": "17"
    },
    "151": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "158": {
      "op": "SHL"
    },
    "159": {
      "op": "SUB"
    },
    "160": {
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "161": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "162": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "AND",
      "path": "17"
    },
    "163": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "164": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "165": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "166": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "167": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "176": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP2",
      "path": "17"
    },
    "177": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "AND",
      "path": "17"
    },
    "178": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "179": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "186": {
      "op": "SHL"
    },
    "187": {
      "offset": [
        988,
        1041
      ],
      "op": "DUP3",
      "path": "17"
    },
    "188": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DIV",
      "path": "17"
    },
    "189": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "AND",
      "path": "17"
    },
    "190": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "191": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "offset": [
        988,
        1041
      ],
      "op": "DUP3",
      "path": "17"
    },
    "199": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DIV",
      "path": "17"
    },
    "200": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP2",
      "path": "17"
    },
    "201": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "AND",
      "path": "17"
    },
    "202": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "207": {
      "op": "SHL"
    },
    "208": {
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "209": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DIV",
      "path": "17"
    },
    "210": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "AND",
      "path": "17"
    },
    "211": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP8",
      "path": "17"
    },
    "212": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "JUMP",
      "path": "17"
    },
    "213": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "214": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "216": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP1",
      "path": "17"
    },
    "217": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "224": {
      "op": "SHL"
    },
    "225": {
      "op": "SUB"
    },
    "226": {
      "op": "SWAP1"
    },
    "227": {
      "op": "SWAP9"
    },
    "228": {
      "op": "AND"
    },
    "229": {
      "op": "DUP9"
    },
    "230": {
      "op": "MSTORE"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "233": {
      "op": "DUP9"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "op": "SWAP7"
    },
    "236": {
      "op": "SWAP1"
    },
    "237": {
      "op": "SWAP7"
    },
    "238": {
      "op": "MSTORE"
    },
    "239": {
      "op": "SWAP5"
    },
    "240": {
      "op": "DUP7"
    },
    "241": {
      "op": "ADD"
    },
    "242": {
      "op": "SWAP4"
    },
    "243": {
      "op": "SWAP1"
    },
    "244": {
      "op": "SWAP4"
    },
    "245": {
      "op": "MSTORE"
    },
    "246": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "255": {
      "op": "SWAP1"
    },
    "256": {
      "op": "SWAP2"
    },
    "257": {
      "op": "AND"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "260": {
      "op": "DUP6"
    },
    "261": {
      "op": "ADD"
    },
    "262": {
      "op": "MSTORE"
    },
    "263": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "266": {
      "op": "AND"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "269": {
      "op": "DUP5"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "ISZERO"
    },
    "273": {
      "op": "ISZERO"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "276": {
      "op": "DUP4"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "op": "MSTORE"
    },
    "279": {
      "op": "ISZERO"
    },
    "280": {
      "op": "ISZERO"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "283": {
      "op": "DUP3"
    },
    "284": {
      "op": "ADD"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "offset": [
        988,
        1041
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "290": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "292": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "293": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "DUP1",
      "path": "17"
    },
    "294": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "295": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SUB",
      "path": "17"
    },
    "296": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "297": {
      "fn": null,
      "offset": [
        988,
        1041
      ],
      "op": "RETURN",
      "path": "17"
    },
    "298": {
      "offset": [
        868,
        887
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "299": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "301": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "302": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13D"
    },
    "305": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "offset": [
        868,
        887
      ],
      "op": "AND",
      "path": "17"
    },
    "315": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "DUP2",
      "path": "17"
    },
    "316": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "JUMP",
      "path": "17"
    },
    "317": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "318": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "320": {
      "fn": null,
      "offset": [
        868,
        887
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "SWAP2"
    },
    "331": {
      "op": "AND"
    },
    "332": {
      "op": "DUP2"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "offset": [
        868,
        887
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x121"
    },
    "340": {
      "op": "JUMP"
    },
    "341": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "342": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x168"
    },
    "345": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x163"
    },
    "348": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "349": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "351": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA57"
    },
    "354": {
      "fn": "LockContract.new_employee",
      "jump": "i",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMP",
      "path": "17"
    },
    "355": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "356": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C8"
    },
    "359": {
      "fn": "LockContract.new_employee",
      "jump": "i",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMP",
      "path": "17"
    },
    "360": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "361": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "STOP",
      "path": "17"
    },
    "362": {
      "fn": "LockContract.release",
      "offset": [
        5570,
        5878
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "363": {
      "fn": "LockContract.release",
      "offset": [
        5570,
        5878
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x168"
    },
    "366": {
      "fn": "LockContract.release",
      "offset": [
        5570,
        5878
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4A7"
    },
    "369": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        5570,
        5878
      ],
      "op": "JUMP",
      "path": "17"
    },
    "370": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "371": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x185"
    },
    "374": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x180"
    },
    "377": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "378": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "380": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA3C"
    },
    "383": {
      "fn": "LockContract.get_date",
      "jump": "i",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMP",
      "path": "17"
    },
    "384": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "385": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5AB"
    },
    "388": {
      "fn": "LockContract.get_date",
      "jump": "i",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMP",
      "path": "17"
    },
    "389": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "390": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "392": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x121"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "404": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x168"
    },
    "407": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A1"
    },
    "410": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "411": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "413": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA3C"
    },
    "416": {
      "fn": "LockContract.remove_employee",
      "jump": "i",
      "offset": [
        7871,
        8005
      ],
      "op": "JUMP",
      "path": "17"
    },
    "417": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "424": {
      "op": "SHL"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "AND",
      "path": "17",
      "statement": 0
    },
    "427": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7993,
        7998
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "429": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "430": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "DUP2",
      "path": "17"
    },
    "431": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "432": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7955
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "434": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "436": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "437": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "439": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "440": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7972
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "441": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "443": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7990
      ],
      "op": "ADD",
      "path": "17"
    },
    "444": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7998
      ],
      "op": "DUP1",
      "path": "17"
    },
    "445": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7998
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "450": {
      "op": "SHL"
    },
    "451": {
      "op": "NOT"
    },
    "452": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7998
      ],
      "op": "AND",
      "path": "17"
    },
    "453": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7998
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "454": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7938,
        7998
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "455": {
      "fn": "LockContract.remove_employee",
      "offset": [
        7871,
        8005
      ],
      "op": "JUMP",
      "path": "17"
    },
    "456": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "457": {
      "fn": "LockContract.new_employee",
      "offset": [
        7289,
        7313
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "459": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "461": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "462": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP1",
      "path": "17"
    },
    "463": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "465": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "466": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "468": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "469": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP1",
      "path": "17"
    },
    "470": {
      "fn": "LockContract.new_employee",
      "offset": [
        7325,
        7345
      ],
      "op": "DUP4",
      "path": "17"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "AND",
      "path": "17"
    },
    "480": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "481": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "482": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "484": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "485": {
      "fn": "LockContract.new_employee",
      "offset": [
        7347,
        7348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "487": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "488": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "489": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "491": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "492": {
      "fn": "LockContract.new_employee",
      "offset": [
        7350,
        7356
      ],
      "op": "DUP5",
      "path": "17"
    },
    "493": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "494": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "495": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "497": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "498": {
      "fn": "LockContract.new_employee",
      "offset": [
        7365,
        7380
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "499": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "508": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "AND",
      "path": "17"
    },
    "509": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "510": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "511": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "513": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "514": {
      "fn": "LockContract.new_employee",
      "offset": [
        7382,
        7383
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "516": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "519": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "AND",
      "path": "17"
    },
    "520": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "521": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "522": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "524": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "525": {
      "fn": "LockContract.new_employee",
      "offset": [
        7385,
        7389
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "527": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "528": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "529": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "530": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "531": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "533": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ADD",
      "path": "17"
    },
    "534": {
      "fn": "LockContract.new_employee",
      "offset": [
        7391,
        7396
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "536": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "537": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "538": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "DUP2",
      "path": "17"
    },
    "539": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "540": {
      "fn": "LockContract.new_employee",
      "offset": [
        7316,
        7397
      ],
      "op": "POP",
      "path": "17"
    },
    "541": {
      "fn": "LockContract.new_employee",
      "offset": [
        7289,
        7397
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "542": {
      "fn": "LockContract.new_employee",
      "offset": [
        7289,
        7397
      ],
      "op": "POP",
      "path": "17"
    },
    "543": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7489
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 1,
      "value": "0x2"
    },
    "545": {
      "fn": "LockContract.new_employee",
      "offset": [
        7495,
        7503
      ],
      "op": "DUP2",
      "path": "17"
    },
    "546": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "547": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP1",
      "path": "17"
    },
    "548": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "550": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "551": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "552": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "553": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP1",
      "path": "17"
    },
    "554": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "555": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "556": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP1",
      "path": "17"
    },
    "557": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "558": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "559": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "560": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "562": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "563": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SUB",
      "path": "17"
    },
    "564": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "565": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "567": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "568": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "570": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "572": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "573": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "574": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "576": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "577": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "578": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "580": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "581": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "582": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "583": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "584": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "585": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "586": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "587": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "589": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "590": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "591": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "592": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "593": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "595": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "596": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "598": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "601": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "EXP",
      "path": "17"
    },
    "602": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "603": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "604": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "611": {
      "op": "SHL"
    },
    "612": {
      "op": "SUB"
    },
    "613": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "614": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "NOT",
      "path": "17"
    },
    "615": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "616": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "617": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP4",
      "path": "17"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "627": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "628": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "OR",
      "path": "17"
    },
    "629": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "630": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "631": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "632": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "634": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "635": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "636": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "637": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "638": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "640": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "641": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "642": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "644": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "645": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "646": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "647": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "648": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "650": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "651": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "652": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "654": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "655": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "656": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "657": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "658": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "660": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "661": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "663": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "666": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "EXP",
      "path": "17"
    },
    "667": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "668": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "669": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "670": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "679": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "680": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "NOT",
      "path": "17"
    },
    "681": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "682": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "683": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP4",
      "path": "17"
    },
    "684": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "693": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "694": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "695": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "OR",
      "path": "17"
    },
    "696": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "697": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "698": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "699": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "701": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "702": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "703": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "704": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "705": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "707": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "708": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "710": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "713": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "EXP",
      "path": "17"
    },
    "714": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "715": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "716": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "717": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "720": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "721": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "NOT",
      "path": "17"
    },
    "722": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "723": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "724": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP4",
      "path": "17"
    },
    "725": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "728": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "729": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "730": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "OR",
      "path": "17"
    },
    "731": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "732": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "733": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "734": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA0"
    },
    "736": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "737": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "738": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "739": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "740": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "742": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "743": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "745": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "748": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "EXP",
      "path": "17"
    },
    "749": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "750": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "751": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "752": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "754": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "755": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "NOT",
      "path": "17"
    },
    "756": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "757": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "758": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP4",
      "path": "17"
    },
    "759": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "760": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "761": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "762": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "OR",
      "path": "17"
    },
    "763": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "764": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "765": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "766": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC0"
    },
    "768": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP3",
      "path": "17"
    },
    "769": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "770": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "771": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "772": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "774": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ADD",
      "path": "17"
    },
    "775": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xB"
    },
    "777": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "780": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "EXP",
      "path": "17"
    },
    "781": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "782": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "783": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP2",
      "path": "17"
    },
    "784": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "786": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "787": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "NOT",
      "path": "17"
    },
    "788": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "AND",
      "path": "17"
    },
    "789": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "790": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "DUP4",
      "path": "17"
    },
    "791": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "792": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "793": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "MUL",
      "path": "17"
    },
    "794": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "OR",
      "path": "17"
    },
    "795": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "796": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "797": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "798": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "799": {
      "fn": "LockContract.new_employee",
      "offset": [
        7479,
        7504
      ],
      "op": "POP",
      "path": "17"
    },
    "800": {
      "fn": "LockContract.new_employee",
      "offset": [
        7617,
        7625
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 2
    },
    "801": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "803": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "805": {
      "fn": "LockContract.new_employee",
      "offset": [
        7595,
        7615
      ],
      "op": "DUP5",
      "path": "17"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "AND",
      "path": "17"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "SUB"
    },
    "823": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "AND",
      "path": "17"
    },
    "824": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "DUP2",
      "path": "17"
    },
    "825": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "826": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "828": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "ADD",
      "path": "17"
    },
    "829": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "830": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "DUP2",
      "path": "17"
    },
    "831": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "832": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "834": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "ADD",
      "path": "17"
    },
    "835": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "837": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7616
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "838": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "840": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "841": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "842": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "843": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "844": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "846": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "847": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "849": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "852": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "EXP",
      "path": "17"
    },
    "853": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "854": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "855": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "865": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "NOT",
      "path": "17"
    },
    "866": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "867": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "868": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP4",
      "path": "17"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "op": "SUB"
    },
    "877": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "878": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "879": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "OR",
      "path": "17"
    },
    "880": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "881": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "882": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "883": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "885": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "886": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "887": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "888": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "889": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "891": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "892": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "893": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "895": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "896": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "897": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "898": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "899": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "901": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "902": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "903": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "905": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "906": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "907": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "908": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "909": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "911": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "912": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "914": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "917": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "EXP",
      "path": "17"
    },
    "918": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "919": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "920": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "921": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "930": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "931": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "NOT",
      "path": "17"
    },
    "932": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "933": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "934": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP4",
      "path": "17"
    },
    "935": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "944": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "945": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "946": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "OR",
      "path": "17"
    },
    "947": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "948": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "949": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "950": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "952": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "953": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "954": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "955": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "956": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "958": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "959": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x8"
    },
    "961": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "964": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "EXP",
      "path": "17"
    },
    "965": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "966": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "967": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "968": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "971": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "972": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "NOT",
      "path": "17"
    },
    "973": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "974": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "975": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP4",
      "path": "17"
    },
    "976": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "979": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "980": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "981": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "OR",
      "path": "17"
    },
    "982": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "983": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "984": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "985": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA0"
    },
    "987": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "988": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "989": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "990": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "991": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "993": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "994": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xA"
    },
    "996": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "999": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "EXP",
      "path": "17"
    },
    "1000": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1001": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1002": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1003": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1005": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "1006": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "NOT",
      "path": "17"
    },
    "1007": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "1008": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1009": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1010": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1011": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1012": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "1013": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "OR",
      "path": "17"
    },
    "1014": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1015": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1016": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "1017": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xC0"
    },
    "1019": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1020": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "1021": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1022": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1023": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1025": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ADD",
      "path": "17"
    },
    "1026": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xB"
    },
    "1028": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "1031": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "EXP",
      "path": "17"
    },
    "1032": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1033": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1034": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1035": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1037": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "1038": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "NOT",
      "path": "17"
    },
    "1039": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "AND",
      "path": "17"
    },
    "1040": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1041": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1042": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1043": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1044": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "MUL",
      "path": "17"
    },
    "1045": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "OR",
      "path": "17"
    },
    "1046": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1047": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1048": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "1049": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1050": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "1051": {
      "fn": "LockContract.new_employee",
      "offset": [
        7577,
        7625
      ],
      "op": "POP",
      "path": "17"
    },
    "1052": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 3,
      "value": "0x0"
    },
    "1054": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1055": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1056": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1057": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x100"
    },
    "1060": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "EXP",
      "path": "17"
    },
    "1061": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1062": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "DIV",
      "path": "17"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7705
      ],
      "op": "AND",
      "path": "17"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "op": "SUB"
    },
    "1080": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7714
      ],
      "op": "AND",
      "path": "17"
    },
    "1081": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7714
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x26E402B"
    },
    "1086": {
      "fn": "LockContract.new_employee",
      "offset": [
        7715,
        7735
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1087": {
      "fn": "LockContract.new_employee",
      "offset": [
        7737,
        7743
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1088": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1090": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1091": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1092": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1097": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "AND",
      "path": "17"
    },
    "1098": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "1100": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "SHL",
      "path": "17"
    },
    "1101": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1102": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1103": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1105": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "ADD",
      "path": "17"
    },
    "1106": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x470"
    },
    "1109": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1110": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1111": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1118": {
      "op": "SHL"
    },
    "1119": {
      "op": "SUB"
    },
    "1120": {
      "op": "SWAP3"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "SWAP3"
    },
    "1123": {
      "op": "AND"
    },
    "1124": {
      "op": "DUP3"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1133": {
      "op": "ADD"
    },
    "1134": {
      "op": "SWAP1"
    },
    "1135": {
      "op": "JUMP"
    },
    "1136": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1137": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1139": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1141": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1142": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1143": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1144": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "SUB",
      "path": "17"
    },
    "1145": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1146": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1148": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1149": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1150": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "1151": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1152": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1153": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1154": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x48A"
    },
    "1157": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1158": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1160": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1161": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1162": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1163": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "POP",
      "path": "17"
    },
    "1164": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "GAS",
      "path": "17"
    },
    "1165": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "CALL",
      "path": "17"
    },
    "1166": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1167": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1168": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1169": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49E"
    },
    "1172": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1173": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1174": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1176": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1177": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1178": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1179": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1181": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1182": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1183": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "POP",
      "path": "17"
    },
    "1184": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "POP",
      "path": "17"
    },
    "1185": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "POP",
      "path": "17"
    },
    "1186": {
      "fn": "LockContract.new_employee",
      "offset": [
        7700,
        7744
      ],
      "op": "POP",
      "path": "17"
    },
    "1187": {
      "fn": "LockContract.new_employee",
      "offset": [
        7229,
        7751
      ],
      "op": "POP",
      "path": "17"
    },
    "1188": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "POP",
      "path": "17"
    },
    "1189": {
      "fn": "LockContract.new_employee",
      "offset": [
        7154,
        7751
      ],
      "op": "POP",
      "path": "17"
    },
    "1190": {
      "fn": "LockContract.new_employee",
      "jump": "o",
      "offset": [
        7154,
        7751
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1191": {
      "fn": "LockContract.release",
      "offset": [
        5570,
        5878
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1192": {
      "fn": "LockContract.release",
      "offset": [
        5618,
        5628
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1193": {
      "offset": [
        4382,
        4414
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1195": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1196": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1197": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1198": {
      "offset": [
        4382,
        4399
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1200": {
      "offset": [
        4382,
        4414
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1202": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1203": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1204": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1205": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1207": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1208": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1209": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4414
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1210": {
      "offset": [
        4382,
        4432
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1212": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4432
      ],
      "op": "ADD",
      "path": "17"
    },
    "1213": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4432
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "offset": [
        4382,
        4432
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1220": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4432
      ],
      "op": "DIV",
      "path": "17"
    },
    "1221": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4432
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xFF"
    },
    "1223": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4432
      ],
      "op": "AND",
      "path": "17"
    },
    "1224": {
      "offset": [
        4382,
        4440
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1225": {
      "fn": "LockContract.release",
      "offset": [
        4382,
        4440
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1226": {
      "branch": 20,
      "fn": "LockContract.release",
      "offset": [
        4382,
        4440
      ],
      "op": "EQ",
      "path": "17"
    },
    "1227": {
      "offset": [
        4374,
        4482
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x529"
    },
    "1230": {
      "branch": 20,
      "offset": [
        4374,
        4482
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1231": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1233": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "offset": [
        4374,
        4482
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1242": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1245": {
      "offset": [
        4374,
        4482
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1247": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1248": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "ADD",
      "path": "17"
    },
    "1249": {
      "op": "MSTORE"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1254": {
      "op": "DUP3"
    },
    "1255": {
      "op": "ADD"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "PUSH32",
      "value": "0x546869732061646472657373206973206E6F20612063757272656E7420656D70"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH5",
      "value": "0x6C6F796565"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1306": {
      "op": "DUP3"
    },
    "1307": {
      "op": "ADD"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "offset": [
        4374,
        4482
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1313": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1315": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1316": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1317": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1318": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "SUB",
      "path": "17"
    },
    "1319": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1320": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "1321": {
      "fn": "LockContract.release",
      "offset": [
        4374,
        4482
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1322": {
      "fn": "LockContract.release",
      "offset": [
        5639,
        5657
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1324": {
      "fn": "LockContract.release",
      "offset": [
        5660,
        5713
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x535"
    },
    "1327": {
      "fn": "LockContract.release",
      "offset": [
        5677,
        5687
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1328": {
      "fn": "LockContract.release",
      "offset": [
        5696,
        5711
      ],
      "op": "TIMESTAMP",
      "path": "17"
    },
    "1329": {
      "fn": "LockContract.release",
      "offset": [
        5660,
        5676
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x61B"
    },
    "1332": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        5660,
        5713
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1333": {
      "fn": "LockContract.release",
      "offset": [
        5660,
        5713
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1334": {
      "fn": "LockContract.release",
      "offset": [
        5639,
        5713
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1335": {
      "fn": "LockContract.release",
      "offset": [
        5639,
        5713
      ],
      "op": "POP",
      "path": "17"
    },
    "1336": {
      "fn": "LockContract.release",
      "offset": [
        5741,
        5751
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 4
    },
    "1337": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1339": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5737
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1341": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1342": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1343": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1344": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x549"
    },
    "1347": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1348": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1349": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA99"
    },
    "1352": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        5723,
        5751
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1353": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1354": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1355": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1356": {
      "fn": "LockContract.release",
      "offset": [
        5723,
        5751
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x9"
    },
    "1361": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1362": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1364": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1365": {
      "op": "DUP3"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1377": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1378": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "AND",
      "path": "17"
    },
    "1379": {
      "fn": "LockContract.release",
      "offset": [
        5780,
        5786
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1380": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "1413": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1419": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1420": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1421": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1422": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "SUB",
      "path": "17"
    },
    "1423": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1424": {
      "fn": "LockContract.release",
      "offset": [
        5766,
        5799
      ],
      "op": "LOG2",
      "path": "17"
    },
    "1425": {
      "fn": "LockContract.release",
      "offset": [
        5839,
        5845
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 6,
      "value": "0x9"
    },
    "1427": {
      "fn": "LockContract.release",
      "offset": [
        5839,
        5845
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1428": {
      "fn": "LockContract.release",
      "offset": [
        5809,
        5871
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5A7"
    },
    "1431": {
      "fn": "LockContract.release",
      "offset": [
        5809,
        5871
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "LockContract.release",
      "offset": [
        5839,
        5845
      ],
      "op": "AND",
      "path": "17"
    },
    "1441": {
      "fn": "LockContract.release",
      "offset": [
        5848,
        5858
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1442": {
      "fn": "LockContract.release",
      "offset": [
        5860,
        5870
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1443": {
      "fn": "LockContract.release",
      "offset": [
        5809,
        5831
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x774"
    },
    "1446": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        5809,
        5871
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1447": {
      "fn": "LockContract.release",
      "offset": [
        5809,
        5871
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1448": {
      "fn": "LockContract.release",
      "offset": [
        5629,
        5878
      ],
      "op": "POP",
      "path": "17"
    },
    "1449": {
      "fn": "LockContract.release",
      "offset": [
        5570,
        5878
      ],
      "op": "POP",
      "path": "17"
    },
    "1450": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        5570,
        5878
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1451": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "op": "SUB"
    },
    "1460": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1461": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "AND",
      "path": "17"
    },
    "1462": {
      "fn": "LockContract.get_date",
      "offset": [
        4825,
        4832
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1464": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1465": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1466": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1467": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1469": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1471": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1472": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1474": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1475": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4960
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1476": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1478": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "ADD",
      "path": "17"
    },
    "1479": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1480": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1487": {
      "op": "SHL"
    },
    "1488": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1489": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "DIV",
      "path": "17"
    },
    "1490": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "AND",
      "path": "17"
    },
    "1491": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1492": {
      "fn": "LockContract.get_date",
      "offset": [
        5064,
        5108
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1501": {
      "fn": "LockContract.get_date",
      "offset": [
        5064,
        5108
      ],
      "op": "AND",
      "path": "17"
    },
    "1502": {
      "fn": "LockContract.get_date",
      "offset": [
        4825,
        4832
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1503": {
      "fn": "LockContract.get_date",
      "offset": [
        5316,
        5342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5EB"
    },
    "1506": {
      "fn": "LockContract.get_date",
      "offset": [
        4927,
        4970
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1507": {
      "fn": "LockContract.get_date",
      "offset": [
        5317,
        5324
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x278D00"
    },
    "1511": {
      "fn": "LockContract.get_date",
      "offset": [
        5316,
        5342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAB1"
    },
    "1514": {
      "fn": "LockContract.get_date",
      "jump": "i",
      "offset": [
        5316,
        5342
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1515": {
      "fn": "LockContract.get_date",
      "offset": [
        5316,
        5342
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1516": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0xFFFFFF"
    },
    "1520": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "AND",
      "path": "17"
    },
    "1521": {
      "fn": "LockContract.get_date",
      "offset": [
        5305,
        5314
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1523": {
      "fn": "LockContract.get_date",
      "offset": [
        5305,
        5314
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1524": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5302
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1525": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1534": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "AND",
      "path": "17"
    },
    "1535": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x608"
    },
    "1538": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1539": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1540": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA99"
    },
    "1543": {
      "fn": "LockContract.get_date",
      "jump": "i",
      "offset": [
        5292,
        5314
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1544": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5314
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1545": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x612"
    },
    "1548": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1549": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1550": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA99"
    },
    "1553": {
      "fn": "LockContract.get_date",
      "jump": "i",
      "offset": [
        5292,
        5342
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1554": {
      "fn": "LockContract.get_date",
      "offset": [
        5292,
        5342
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1555": {
      "fn": "LockContract.get_date",
      "offset": [
        5267,
        5342
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1556": {
      "fn": "LockContract.get_date",
      "offset": [
        4754,
        5439
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1557": {
      "op": "POP"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "LockContract.get_date",
      "jump": "o",
      "offset": [
        4754,
        5439
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1563": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1573": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "AND",
      "path": "17"
    },
    "1574": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6098,
        6105
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1576": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1577": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1578": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1579": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6216
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1581": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1583": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1584": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1586": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1587": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6232
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1588": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1590": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "ADD",
      "path": "17"
    },
    "1591": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1592": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6280,
        6294
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 7,
      "value": "0x5"
    },
    "1594": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6280,
        6294
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1601": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1602": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "DIV",
      "path": "17"
    },
    "1603": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "1606": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "AND",
      "path": "17"
    },
    "1607": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6199,
        6242
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1608": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6261,
        6294
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1609": {
      "branch": 21,
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6261,
        6294
      ],
      "op": "LT",
      "path": "17"
    },
    "1610": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6A5"
    },
    "1613": {
      "branch": 21,
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1614": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1616": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1625": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1630": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1631": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "ADD",
      "path": "17"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1637": {
      "op": "DUP3"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH32",
      "value": "0x416C6C206D696C6573746F6E6520726577617264732068617665206265656E20"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1675": {
      "op": "DUP3"
    },
    "1676": {
      "op": "ADD"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH7",
      "value": "0x18DB185A5B5959"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1691": {
      "op": "DUP3"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "op": "MSTORE"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x520"
    },
    "1700": {
      "op": "JUMP"
    },
    "1701": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6253,
        6338
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1702": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6436,
        6460
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6AE"
    },
    "1705": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6445,
        6459
      ],
      "op": "DUP5",
      "path": "17"
    },
    "1706": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6436,
        6444
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5AB"
    },
    "1709": {
      "fn": "LockContract._vestingSchedule",
      "jump": "i",
      "offset": [
        6436,
        6460
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1710": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6436,
        6460
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1711": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6424,
        6433
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1712": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6424,
        6460
      ],
      "op": "PUSH8",
      "path": "17",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1721": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6424,
        6460
      ],
      "op": "AND",
      "path": "17"
    },
    "1722": {
      "branch": 22,
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6424,
        6460
      ],
      "op": "GT",
      "path": "17"
    },
    "1723": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6420,
        7057
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1724": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6420,
        7057
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x768"
    },
    "1727": {
      "branch": 22,
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6420,
        7057
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1728": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6695,
        6709
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x5"
    },
    "1730": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6695,
        6709
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1740": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "AND",
      "path": "17"
    },
    "1741": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6621,
        6641
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1743": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1744": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1745": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1746": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6661
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1748": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1750": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1751": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1753": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1754": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6677
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1755": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6693
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1757": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6693
      ],
      "op": "ADD",
      "path": "17"
    },
    "1758": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6693
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1759": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6621,
        6641
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1760": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6621,
        6641
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1761": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6710
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6E9"
    },
    "1764": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6710
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1765": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6710
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xADC"
    },
    "1768": {
      "fn": "LockContract._vestingSchedule",
      "jump": "i",
      "offset": [
        6644,
        6710
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1769": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6644,
        6710
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "DUP7",
      "path": "17",
      "statement": 8
    },
    "1779": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "AND",
      "path": "17"
    },
    "1780": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1782": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1783": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1784": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1785": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6885
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1787": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1789": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1790": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1791": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1792": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1794": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1795": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1796": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6901
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1797": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1799": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "ADD",
      "path": "17"
    },
    "1800": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1801": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6621,
        6710
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1802": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6621,
        6710
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x720"
    },
    "1807": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6913
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1814": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "DIV",
      "path": "17"
    },
    "1815": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "1818": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "AND",
      "path": "17"
    },
    "1819": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6911
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1820": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAFE"
    },
    "1823": {
      "fn": "LockContract._vestingSchedule",
      "jump": "i",
      "offset": [
        6868,
        6913
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1824": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6868,
        6913
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1834": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "AND",
      "path": "17"
    },
    "1835": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1837": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1838": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1839": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1840": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6839
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1842": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1844": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1845": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1847": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1848": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6855
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1849": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6865
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x3"
    },
    "1851": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6865
      ],
      "op": "ADD",
      "path": "17"
    },
    "1852": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1853": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1854": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFFFF"
    },
    "1857": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1858": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1859": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1860": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "AND",
      "path": "17"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "MUL",
      "path": "17"
    },
    "1867": {
      "op": "PUSH10",
      "value": "0xFFFF0000000000000000"
    },
    "1878": {
      "op": "NOT"
    },
    "1879": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1880": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1881": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "AND",
      "path": "17"
    },
    "1882": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1883": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1884": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1885": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "OR",
      "path": "17"
    },
    "1886": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1887": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6822,
        6913
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1888": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6994,
        7006
      ],
      "op": "SWAP2",
      "path": "17",
      "statement": 9
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6987,
        7006
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x76E"
    },
    "1893": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6987,
        7006
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6987,
        7006
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1896": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6420,
        7057
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1897": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        7045,
        7046
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 10,
      "value": "0x0"
    },
    "1899": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        7038,
        7046
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1900": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        7038,
        7046
      ],
      "op": "POP",
      "path": "17"
    },
    "1901": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        7038,
        7046
      ],
      "op": "POP",
      "path": "17"
    },
    "1902": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1903": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1904": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1905": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "POP",
      "path": "17"
    },
    "1906": {
      "fn": "LockContract._vestingSchedule",
      "offset": [
        6004,
        7063
      ],
      "op": "POP",
      "path": "17"
    },
    "1907": {
      "fn": "LockContract._vestingSchedule",
      "jump": "o",
      "offset": [
        6004,
        7063
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1908": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1909": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x40"
    },
    "1911": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1912": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "op": "DUP5"
    },
    "1922": {
      "op": "AND"
    },
    "1923": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1925": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1926": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1930": {
      "op": "DUP1"
    },
    "1931": {
      "op": "DUP3"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "DUP5"
    },
    "1934": {
      "op": "SWAP1"
    },
    "1935": {
      "op": "MSTORE"
    },
    "1936": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1937": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1938": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1939": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1940": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "6"
    },
    "1941": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1942": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1943": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "1944": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1945": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1948": {
      "op": "SWAP1"
    },
    "1949": {
      "op": "SWAP2"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1952": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1953": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1954": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1956": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1957": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "6"
    },
    "1958": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1959": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "6"
    },
    "1969": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "6"
    },
    "1978": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1979": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1980": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C6"
    },
    "1983": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1984": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1985": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1986": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CB"
    },
    "1989": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1990": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1991": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "1992": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "1993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "6"
    },
    "1994": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x820"
    },
    "2001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "2009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2011": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2013": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2015": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2017": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2019": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "6"
    },
    "2020": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "2053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "6"
    },
    "2056": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "6"
    },
    "2066": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89D"
    },
    "2069": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2072": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2073": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2078": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "6"
    },
    "2079": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2080": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2081": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2082": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2083": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2084": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2087": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C6"
    },
    "2090": {
      "branch": 26,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2091": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 12
    },
    "2092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2093": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2095": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "2096": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2097": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2098": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2099": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "6"
    },
    "2100": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2101": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x83E"
    },
    "2104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2105": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2106": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB24"
    },
    "2109": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2110": {
      "branch": 27,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2111": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C6"
    },
    "2114": {
      "branch": 27,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2115": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2117": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2124": {
      "op": "SHL"
    },
    "2125": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2126": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2129": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2131": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2132": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "6"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2195": {
      "op": "DUP3"
    },
    "2196": {
      "op": "ADD"
    },
    "2197": {
      "op": "MSTORE"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x520"
    },
    "2204": {
      "op": "JUMP"
    },
    "2205": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2206": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2208": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x8AC"
    },
    "2211": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2212": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2213": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2215": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2216": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8B6"
    },
    "2219": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2220": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2221": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2222": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "7"
    },
    "2223": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2224": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2225": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2226": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "7"
    },
    "2227": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "7"
    },
    "2228": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "7"
    },
    "2229": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2231": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 14
    },
    "2234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "2235": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "7"
    },
    "2236": {
      "branch": 23,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2237": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x917"
    },
    "2240": {
      "branch": 23,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2241": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2243": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2250": {
      "op": "SHL"
    },
    "2251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2252": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2255": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2257": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2258": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "7"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2264": {
      "op": "DUP3"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "op": "MSTORE"
    },
    "2267": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2302": {
      "op": "DUP3"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "MSTORE"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x520"
    },
    "2326": {
      "op": "JUMP"
    },
    "2327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 15
    },
    "2337": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "7"
    },
    "2338": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "2339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 16,
      "value": "0x96E"
    },
    "2342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2352": {
      "op": "SHL"
    },
    "2353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2357": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2359": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "7"
    },
    "2361": {
      "op": "MSTORE"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2404": {
      "op": "DUP3"
    },
    "2405": {
      "op": "ADD"
    },
    "2406": {
      "op": "MSTORE"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x520"
    },
    "2413": {
      "op": "JUMP"
    },
    "2414": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2417": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "SUB"
    },
    "2427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "7"
    },
    "2428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x98A"
    },
    "2436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB76"
    },
    "2441": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2442": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "7"
    },
    "2451": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "7"
    },
    "2455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "7"
    },
    "2456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2462": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "7"
    },
    "2466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9C7"
    },
    "2469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2474": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "7"
    },
    "2478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "2480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "7"
    },
    "2482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "7"
    },
    "2483": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "7"
    },
    "2485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "7"
    },
    "2498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9CC"
    },
    "2502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "7"
    },
    "2514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 17,
      "value": "0x9DC"
    },
    "2517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "7"
    },
    "2520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9E7"
    },
    "2523": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "2526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2535": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2536": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "2538": {
      "branch": 24,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2539": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2540": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9F6"
    },
    "2543": {
      "branch": 24,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 18
    },
    "2546": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8AF"
    },
    "2549": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2550": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2551": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2552": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2553": {
      "branch": 25,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2554": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA06"
    },
    "2557": {
      "branch": 25,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2558": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2559": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2560": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2561": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2562": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2564": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "7"
    },
    "2565": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2566": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2567": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 19
    },
    "2568": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2570": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2579": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2580": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2582": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "7"
    },
    "2583": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x520"
    },
    "2586": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2587": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2588": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB92"
    },
    "2591": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2592": {
      "op": "JUMPDEST"
    },
    "2593": {
      "op": "DUP1"
    },
    "2594": {
      "op": "CALLDATALOAD"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2601": {
      "op": "SHL"
    },
    "2602": {
      "op": "SUB"
    },
    "2603": {
      "op": "DUP2"
    },
    "2604": {
      "op": "AND"
    },
    "2605": {
      "op": "DUP2"
    },
    "2606": {
      "op": "EQ"
    },
    "2607": {
      "op": "PUSH2",
      "value": "0xA37"
    },
    "2610": {
      "op": "JUMPI"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2613": {
      "op": "DUP1"
    },
    "2614": {
      "op": "REVERT"
    },
    "2615": {
      "op": "JUMPDEST"
    },
    "2616": {
      "op": "SWAP2"
    },
    "2617": {
      "op": "SWAP1"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "jump": "o",
      "op": "JUMP"
    },
    "2620": {
      "op": "JUMPDEST"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "DUP5"
    },
    "2627": {
      "op": "SUB"
    },
    "2628": {
      "op": "SLT"
    },
    "2629": {
      "op": "ISZERO"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0xA4E"
    },
    "2633": {
      "op": "JUMPI"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2636": {
      "op": "DUP1"
    },
    "2637": {
      "op": "REVERT"
    },
    "2638": {
      "op": "JUMPDEST"
    },
    "2639": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "2642": {
      "op": "DUP3"
    },
    "2643": {
      "op": "PUSH2",
      "value": "0xA20"
    },
    "2646": {
      "jump": "i",
      "op": "JUMP"
    },
    "2647": {
      "op": "JUMPDEST"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2653": {
      "op": "DUP4"
    },
    "2654": {
      "op": "DUP6"
    },
    "2655": {
      "op": "SUB"
    },
    "2656": {
      "op": "SLT"
    },
    "2657": {
      "op": "ISZERO"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2661": {
      "op": "JUMPI"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "REVERT"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "op": "DUP3"
    },
    "2668": {
      "op": "CALLDATALOAD"
    },
    "2669": {
      "op": "SWAP2"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "PUSH2",
      "value": "0xA7A"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2676": {
      "op": "DUP5"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "PUSH2",
      "value": "0xA20"
    },
    "2681": {
      "jump": "i",
      "op": "JUMP"
    },
    "2682": {
      "op": "JUMPDEST"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "op": "SWAP3"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "SWAP1"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "jump": "o",
      "op": "JUMP"
    },
    "2691": {
      "op": "JUMPDEST"
    },
    "2692": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2712": {
      "op": "REVERT"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "NOT"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "GT"
    },
    "2720": {
      "op": "ISZERO"
    },
    "2721": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2724": {
      "op": "JUMPI"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2728": {
      "op": "PUSH2",
      "value": "0xA83"
    },
    "2731": {
      "jump": "i",
      "op": "JUMP"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "SWAP1"
    },
    "2736": {
      "jump": "o",
      "op": "JUMP"
    },
    "2737": {
      "op": "JUMPDEST"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2740": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2744": {
      "op": "DUP1"
    },
    "2745": {
      "op": "DUP4"
    },
    "2746": {
      "op": "AND"
    },
    "2747": {
      "op": "DUP2"
    },
    "2748": {
      "op": "DUP6"
    },
    "2749": {
      "op": "AND"
    },
    "2750": {
      "op": "DUP2"
    },
    "2751": {
      "op": "DUP4"
    },
    "2752": {
      "op": "DIV"
    },
    "2753": {
      "op": "DUP2"
    },
    "2754": {
      "op": "GT"
    },
    "2755": {
      "op": "DUP3"
    },
    "2756": {
      "op": "ISZERO"
    },
    "2757": {
      "op": "ISZERO"
    },
    "2758": {
      "op": "AND"
    },
    "2759": {
      "op": "ISZERO"
    },
    "2760": {
      "op": "PUSH2",
      "value": "0xAD3"
    },
    "2763": {
      "op": "JUMPI"
    },
    "2764": {
      "op": "PUSH2",
      "value": "0xAD3"
    },
    "2767": {
      "op": "PUSH2",
      "value": "0xA83"
    },
    "2770": {
      "jump": "i",
      "op": "JUMP"
    },
    "2771": {
      "op": "JUMPDEST"
    },
    "2772": {
      "op": "MUL"
    },
    "2773": {
      "op": "SWAP5"
    },
    "2774": {
      "op": "SWAP4"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "op": "POP"
    },
    "2779": {
      "jump": "o",
      "op": "JUMP"
    },
    "2780": {
      "op": "JUMPDEST"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2783": {
      "op": "DUP3"
    },
    "2784": {
      "op": "PUSH2",
      "value": "0xAF9"
    },
    "2787": {
      "op": "JUMPI"
    },
    "2788": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2803": {
      "op": "MSTORE"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2808": {
      "op": "REVERT"
    },
    "2809": {
      "op": "JUMPDEST"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "op": "DIV"
    },
    "2812": {
      "op": "SWAP1"
    },
    "2813": {
      "jump": "o",
      "op": "JUMP"
    },
    "2814": {
      "op": "JUMPDEST"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2817": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2820": {
      "op": "DUP1"
    },
    "2821": {
      "op": "DUP4"
    },
    "2822": {
      "op": "AND"
    },
    "2823": {
      "op": "DUP2"
    },
    "2824": {
      "op": "DUP6"
    },
    "2825": {
      "op": "AND"
    },
    "2826": {
      "op": "DUP1"
    },
    "2827": {
      "op": "DUP4"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "GT"
    },
    "2831": {
      "op": "ISZERO"
    },
    "2832": {
      "op": "PUSH2",
      "value": "0xB1B"
    },
    "2835": {
      "op": "JUMPI"
    },
    "2836": {
      "op": "PUSH2",
      "value": "0xB1B"
    },
    "2839": {
      "op": "PUSH2",
      "value": "0xA83"
    },
    "2842": {
      "jump": "i",
      "op": "JUMP"
    },
    "2843": {
      "op": "JUMPDEST"
    },
    "2844": {
      "op": "ADD"
    },
    "2845": {
      "op": "SWAP5"
    },
    "2846": {
      "op": "SWAP4"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "jump": "o",
      "op": "JUMP"
    },
    "2852": {
      "op": "JUMPDEST"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2857": {
      "op": "DUP3"
    },
    "2858": {
      "op": "DUP5"
    },
    "2859": {
      "op": "SUB"
    },
    "2860": {
      "op": "SLT"
    },
    "2861": {
      "op": "ISZERO"
    },
    "2862": {
      "op": "PUSH2",
      "value": "0xB36"
    },
    "2865": {
      "op": "JUMPI"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2868": {
      "op": "DUP1"
    },
    "2869": {
      "op": "REVERT"
    },
    "2870": {
      "op": "JUMPDEST"
    },
    "2871": {
      "op": "DUP2"
    },
    "2872": {
      "op": "MLOAD"
    },
    "2873": {
      "op": "DUP1"
    },
    "2874": {
      "op": "ISZERO"
    },
    "2875": {
      "op": "ISZERO"
    },
    "2876": {
      "op": "DUP2"
    },
    "2877": {
      "op": "EQ"
    },
    "2878": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "2881": {
      "op": "JUMPI"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2884": {
      "op": "DUP1"
    },
    "2885": {
      "op": "REVERT"
    },
    "2886": {
      "op": "JUMPDEST"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2889": {
      "op": "JUMPDEST"
    },
    "2890": {
      "op": "DUP4"
    },
    "2891": {
      "op": "DUP2"
    },
    "2892": {
      "op": "LT"
    },
    "2893": {
      "op": "ISZERO"
    },
    "2894": {
      "op": "PUSH2",
      "value": "0xB61"
    },
    "2897": {
      "op": "JUMPI"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "DUP2"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "MLOAD"
    },
    "2902": {
      "op": "DUP4"
    },
    "2903": {
      "op": "DUP3"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xB49"
    },
    "2912": {
      "op": "JUMP"
    },
    "2913": {
      "op": "JUMPDEST"
    },
    "2914": {
      "op": "DUP4"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "GT"
    },
    "2917": {
      "op": "ISZERO"
    },
    "2918": {
      "op": "PUSH2",
      "value": "0xB70"
    },
    "2921": {
      "op": "JUMPI"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2924": {
      "op": "DUP5"
    },
    "2925": {
      "op": "DUP5"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "op": "JUMPDEST"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "jump": "o",
      "op": "JUMP"
    },
    "2934": {
      "op": "JUMPDEST"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2937": {
      "op": "DUP3"
    },
    "2938": {
      "op": "MLOAD"
    },
    "2939": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2942": {
      "op": "DUP2"
    },
    "2943": {
      "op": "DUP5"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2946": {
      "op": "DUP8"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "op": "PUSH2",
      "value": "0xB46"
    },
    "2951": {
      "jump": "i",
      "op": "JUMP"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "SWAP2"
    },
    "2954": {
      "op": "SWAP1"
    },
    "2955": {
      "op": "SWAP2"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "SWAP3"
    },
    "2958": {
      "op": "SWAP2"
    },
    "2959": {
      "op": "POP"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "jump": "o",
      "op": "JUMP"
    },
    "2962": {
      "op": "JUMPDEST"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2965": {
      "op": "DUP2"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "MLOAD"
    },
    "2971": {
      "op": "DUP1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2974": {
      "op": "DUP5"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "op": "MSTORE"
    },
    "2977": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "2980": {
      "op": "DUP2"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2983": {
      "op": "DUP6"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2987": {
      "op": "DUP8"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "PUSH2",
      "value": "0xB46"
    },
    "2992": {
      "jump": "i",
      "op": "JUMP"
    },
    "2993": {
      "op": "JUMPDEST"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2999": {
      "op": "NOT"
    },
    "3000": {
      "op": "AND"
    },
    "3001": {
      "op": "SWAP2"
    },
    "3002": {
      "op": "SWAP1"
    },
    "3003": {
      "op": "SWAP2"
    },
    "3004": {
      "op": "ADD"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "SWAP3"
    },
    "3009": {
      "op": "SWAP2"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "op": "POP"
    },
    "3012": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6e7b833f5a39053b5567b5382a2c2ba8ed1bc029",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./IVotes.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context {\n\n    //Token\n    IVotes public _wDHN;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Employee) public _walletToEmployee;\n\n    //Structs\n    struct Employee {\n        address employee_address;// probably can take it out\n\n        uint256 received_tokens;// amount of tokens the employee has received\n\n        uint256 tokens_promised;// amount of tokens the employee is owed\n\n        uint64 lock_start;// saves the date of the initial locking of the contract\n\n        uint16 milestone;// how many milestone rewards has the employee claimed\n\n        bool employment_status;// True-currently employed, False-no longer employed\n\n        bool og_employee;/* \n                          saves gas by id'ing each employee as og/true (the original locked team) \n                          or new/false (new employes). This way we can just save the durations and amounts\n                          in two single variables in the contract instead of saving them for each og employee\n                         */\n    }\n\n    //Variables\n    Employee[] _employees;// array with all the employee arrays\n    uint256  _initLock;// initial lock period (2 years)\n    uint256 _erc20Released;// total amount of released tokens\n    uint256 _numMilestones;// number of milestones (number of payments for each employee)\n    uint256 _OGTeamTokens;// tokens that belong to the OG team\n    uint256 _numOGEmployees;// number of OG employess\n    uint256 _leftover;// tokens destined to new employess\n    address _token;// token address\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        IVotes wDHN,\n        uint256 numMilestones,\n        uint256 ogTeamTokens,\n        uint256 initLock,\n        address tokenAdress,\n        address[] memory lockedTeamAddresses,\n        uint256[] memory lockedTeamTokens\n    ) {\n\n        _wDHN=wDHN;\n        // number of milestones\n        _numMilestones = numMilestones;\n\n        // number of OG employees\n        _numOGEmployees = lockedTeamAddresses.length;\n\n        // get the number of tokens destined for the OG team\n        _OGTeamTokens = ogTeamTokens;\n\n        // create an employee struct for each OG employee\n        for (uint i=0; i<lockedTeamAddresses.length; i++){\n\n            // employee address can't be the zero address\n            require(lockedTeamAddresses[i] != address(0), \"Constructor: locked team address is zero address\");\n\n            // get the amount of tokens that belong to each og employee\n            uint256 _amount = _OGTeamTokens/(_numOGEmployees);\n\n            // create the new employee struct\n            Employee memory employee = Employee(lockedTeamAddresses[i], 0, _amount, uint64(block.timestamp), 0, true, true);\n\n            // push the new employee struct to the employees array\n            _employees.push(employee);\n\n            // map the new employee address to its struct\n            _walletToEmployee[lockedTeamAddresses[i]]=employee;\n\n            // delegate future token votes, to the employee\n            delegate_to_employee(lockedTeamAddresses[i], _amount);\n        }\n\n        // establish token address\n        _token = tokenAdress;\n        _wDHN = wDHN;\n\n        // establish the durations periods \n        _initLock = initLock;\n    }\n\n\n    /**\n     * @dev Modifier that only allows current employess to interact with certain functions\n     */\n    modifier onlyEmployees(address callerAddress){\n        require(_walletToEmployee[callerAddress].employment_status == true, 'This address is no a current employee');\n        _;\n    }\n\n\n    /**\n     * @dev Calculates the date of the next milestone (used to see if the milestone has passed or not)\n     * --TO DO: remove the if stament, possibly only needed line 136 \n     * (need to see if 30 days can be multiplied by zero)\n     */\n    function get_date(address _callerAddress) public view virtual returns (uint256) {\n\n        // get the last milestone the employee received\n        uint16 currentMileStone = _walletToEmployee[_callerAddress].milestone;\n        // get the time the lock period began for this employee\n        uint64 lock_start = _walletToEmployee[_callerAddress].lock_start;\n\n        /* the date is equal to the locking start date + the lock \n         time (2 years) + a month for each milestone already retrived\n        */\n        uint256 milestone_date = lock_start + _initLock+ (30 days)*currentMileStone;\n        \n        // return the date of the next milestone \n        return milestone_date;\n    }\n\n\n    /**\n     * @dev Release the tokens according to milestone passage.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual onlyEmployees(msg.sender){\n        uint256 releasable = _vestingSchedule(msg.sender, uint64(block.timestamp));\n        _erc20Released += releasable;\n        emit ERC20Released(_token, releasable);\n        SafeERC20.safeTransfer(IERC20(_token), msg.sender, releasable);\n    }\n\n\n    /**\n     * @dev This returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     */\n    function _vestingSchedule(address _callerAddress, uint64 timestamp) internal virtual returns (uint256) {\n        // get the last milestone the employee received\n        uint16 currentMileStone = _walletToEmployee[_callerAddress].milestone;\n\n        require(currentMileStone < _numMilestones, \"All milestone rewards have been claimed\");\n\n        //If the time is superior to the current milestone duration...\n        if (timestamp > get_date(_callerAddress)) {\n            //...we save the the amount we can withdraw in this milestone.\n\n            // get the amount of tokens that belong to each employee\n            uint256 can_withdraw = _walletToEmployee[_callerAddress].tokens_promised/(_numMilestones);\n\n            //Increment the milestone of a particular employee (if it is not the last milestone)\n            _walletToEmployee[_callerAddress].milestone = _walletToEmployee[_callerAddress].milestone+1;\n\n            //Return the amount to withdraw this milestone\n            return can_withdraw;\n\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @dev Adds a new employee. --TO DO: See how the split enters--\n     */\n    function new_employee(uint256 amount, address new_employee_address) public {\n            // create the new employee struct\n            Employee memory employee = Employee(new_employee_address, 0, amount, uint64(block.timestamp),0, true, false);\n\n            // push the new employee struct to the employees array\n            _employees.push(employee);\n\n            // map the new employee address to its struct\n            _walletToEmployee[new_employee_address]=employee;\n\n            // delegate future token votes, to the employee\n            _wDHN.delegate(new_employee_address, amount);\n    }\n\n    /**\n     * @dev Changes the employee status of an employee who is quitting. --TO DO: Make multi-sig--\n     */\n    function remove_employee(address employeeAddress) public {\n        _walletToEmployee[employeeAddress].employment_status = false;\n    }\n\n    /**\n     * @dev Delegates the voting power to the\n     */\n    function delegate_to_employee(address employee, uint256 amount) internal {\n        _wDHN.delegate(employee, amount);\n    }\n}",
  "sourceMap": "816:7381:17:-:0;;;2545:1660;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2800:5;:10;;-1:-1:-1;;;;;;2800:10:17;-1:-1:-1;;;;;2800:10:17;;;;;2852:14;:30;;;2945:26;;2927:15;:44;3043:13;:28;;;3140:896;3157:19;:26;3155:1;:28;3140:896;;;3304:1;-1:-1:-1;;;;;3270:36:17;:19;3290:1;3270:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3270:36:17;;3262:97;;;;-1:-1:-1;;;3262:97:17;;3461:2:19;3262:97:17;;;3443:21:19;3500:2;3480:18;;;3473:30;3539:34;3519:18;;;3512:62;-1:-1:-1;;;3590:18:19;;;3583:46;3646:19;;3262:97:17;;;;;;;;3446:15;3479;;3464:13;;:31;;;;:::i;:::-;3446:49;;3556:24;3583:84;;;;;;;;3592:19;3612:1;3592:22;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3583:84:17;;;;;3616:1;3583:84;;;;;;;;;;;;;3635:15;-1:-1:-1;;;;;3583:84:17;;;;;;;;;;;;;;;;;;3656:4;3583:84;;;;;;;;;;;;;;3749:10;:25;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3749:25:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3749:25:17;;;;;3583:84;3749:25;;;;;;;;;;;-1:-1:-1;;;;3749:25:17;;;;;;;;;-1:-1:-1;;;;3749:25:17;;;;;;;;;;;;;;;;;;;;3865:22;;3749:25;;-1:-1:-1;3749:25:17;;3865:22;;3885:1;;3865:22;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3847:41:17;;;;;;;;;;;;;;;;-1:-1:-1;3847:41:17;:50;;;;-1:-1:-1;;;;;;3847:50:17;;;;;;;;;;;;-1:-1:-1;3847:50:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3847:50:17;;;-1:-1:-1;;;;;;3847:50:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3847:50:17;;;;;;;;;-1:-1:-1;;;;3847:50:17;;;;;;;;;;;;;;;;3993:22;;3972:53;;3993:22;;4013:1;;3993:22;;;;;;:::i;:::-;;;;;;;4017:7;3972:20;;;:53;;:::i;:::-;3189:847;;3185:3;;;;;:::i;:::-;;;;3140:896;;;-1:-1:-1;;4081:6:17;:20;;-1:-1:-1;;;;;4081:20:17;;;-1:-1:-1;;;;;;4081:20:17;;;;;;;:6;4111:12;;;;;;;;;;;;;;4178:9;:20;-1:-1:-1;816:7381:17;;-1:-1:-1;;816:7381:17;8073:122;8156:5;;:32;;-1:-1:-1;;;8156:32:17;;-1:-1:-1;;;;;4327:32:19;;;8156::17;;;4309:51:19;4376:18;;;4369:34;;;8156:5:17;;;;:14;;4282:18:19;;8156:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8073:122;;:::o;14:139:19:-;-1:-1:-1;;;;;97:31:19;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:127::-;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:275;361:2;355:9;426:2;407:13;;-1:-1:-1;;403:27:19;391:40;;-1:-1:-1;;;;;446:34:19;;482:22;;;443:62;440:88;;;508:18;;:::i;:::-;544:2;537:22;290:275;;-1:-1:-1;290:275:19:o;570:183::-;630:4;-1:-1:-1;;;;;652:30:19;;649:56;;;685:18;;:::i;:::-;-1:-1:-1;730:1:19;726:14;742:4;722:25;;570:183::o;758:659::-;823:5;876:3;869:4;861:6;857:17;853:27;843:55;;894:1;891;884:12;843:55;923:6;917:13;949:4;973:60;989:43;1029:2;989:43;:::i;:::-;973:60;:::i;:::-;1067:15;;;1153:1;1149:10;;;;1137:23;;1133:32;;;1098:12;;;;1177:15;;;1174:35;;;1205:1;1202;1195:12;1174:35;1241:2;1233:6;1229:15;1253:135;1269:6;1264:3;1261:15;1253:135;;;1335:10;;1323:23;;1366:12;;;;1286;;1253:135;;;-1:-1:-1;1406:5:19;758:659;-1:-1:-1;;;;;;758:659:19:o;1422:1700::-;1610:6;1618;1626;1634;1642;1650;1658;1711:3;1699:9;1690:7;1686:23;1682:33;1679:53;;;1728:1;1725;1718:12;1679:53;1760:9;1754:16;1779:39;1812:5;1779:39;:::i;:::-;1837:5;1827:15;;;1861:2;1903;1892:9;1888:18;1882:25;1872:35;;1947:2;1936:9;1932:18;1926:25;1916:35;;1991:2;1980:9;1976:18;1970:25;1960:35;;2040:3;2029:9;2025:19;2019:26;2054:41;2087:7;2054:41;:::i;:::-;2165:3;2150:19;;2144:26;2114:7;;-1:-1:-1;;;;;;2219:14:19;;;2216:34;;;2246:1;2243;2236:12;2216:34;2284:6;2273:9;2269:22;2259:32;;2329:7;2322:4;2318:2;2314:13;2310:27;2300:55;;2351:1;2348;2341:12;2300:55;2380:2;2374:9;2403:60;2419:43;2459:2;2419:43;:::i;2403:60::-;2497:15;;;2579:1;2575:10;;;;2567:19;;2563:28;;;2528:12;;;;2603:19;;;2600:39;;;2635:1;2632;2625:12;2600:39;2659:11;;;;2679:224;2695:6;2690:3;2687:15;2679:224;;;2770:3;2764:10;2787:41;2820:7;2787:41;:::i;:::-;2841:20;;2712:12;;;;2881;;;;2679:224;;;2973:3;2958:19;;2952:26;2922:5;;-1:-1:-1;2952:26:19;-1:-1:-1;;;2990:16:19;;;2987:36;;;3019:1;3016;3009:12;2987:36;;;3042:74;3108:7;3097:8;3086:9;3082:24;3042:74;:::i;:::-;3032:84;;;1422:1700;;;;;;;;;;:::o;3127:127::-;3188:10;3183:3;3179:20;3176:1;3169:31;3219:4;3216:1;3209:15;3243:4;3240:1;3233:15;3676:217;3716:1;3742;3732:132;;3786:10;3781:3;3777:20;3774:1;3767:31;3821:4;3818:1;3811:15;3849:4;3846:1;3839:15;3732:132;-1:-1:-1;3878:9:19;;3676:217::o;3898:232::-;3937:3;3958:17;;;3955:140;;4017:10;4012:3;4008:20;4005:1;3998:31;4052:4;4049:1;4042:15;4080:4;4077:1;4070:15;3955:140;-1:-1:-1;4122:1:19;4111:13;;3898:232::o;4135:274::-;816:7381:17;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}